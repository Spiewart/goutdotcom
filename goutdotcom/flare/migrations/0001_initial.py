# Generated by Django 3.1.7 on 2021-10-11 17:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('lab', '0001_initial'),
        ('treatment', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Flare',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('location', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Right great toe', 'Right great toe'), ('Right second toe', 'Right second toe'), ('Right third toe', 'Right third toe'), ('Right fourth toe', 'Right fourth toe'), ('Right little toe', 'Right little toe'), ('Left great toe', 'Left great toe'), ('Left secont toe', 'Left second toe'), ('Left third toe', 'Left third toe'), ('Left fourth toe', 'Left fourth toe'), ('Left little toe', 'Left little toe'), ('Right ankle', 'Right ankle'), ('Left ankle', 'Left ankle'), ('Right knee', 'Right knee'), ('Left knee', 'Left knee'), ('Right hip', 'Right hip'), ('Left hip', 'Left hip'), ('Right thumb', 'Right thumb'), ('Right index finger', 'Right index finger'), ('Right middle finger', 'Right middle finger'), ('Right ring finger', 'Right ring finger'), ('Right little finger', 'Right little finger'), ('Left thumb', 'Left thumb'), ('Left index finger', 'Left index finger'), ('Left middle finger', 'Left middle finger'), ('Left ring finger', 'Left ring finger'), ('Left little finger', 'Left little finger'), ('Right wrist', 'Right wrist'), ('Left wrist', 'Left wrist'), ('Right elbow', 'Right elbow'), ('Left elbow', 'Left elbow'), ('Right shoulder', 'Right shoulder'), ('Left shoulder', 'Left shoulder')], help_text='What joint did the flare occur in?', max_length=471, null=True)),
                ('treatment', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Colcrys', 'Colchicine'), ('Advil', 'Ibuprofen'), ('Aleve', 'Naproxen'), ('Celebrex', 'Celecoxib'), ('Mobic', 'Meloxicam'), ('Prednisone', 'Prednisone'), ('Methylprednisolone', 'Methylprednisolone'), ('Tincture of time', 'Tincture of time'), ('Other treatment', 'Other treatment')], help_text='What was the flare treated with?', max_length=97, null=True)),
                ('duration', models.IntegerField(blank=True, help_text='How long did it last? (days)', null=True)),
                ('labs', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Urate', 'Urate'), ('ALT', 'ALT'), ('AST', 'AST'), ('Creatinine', 'Creatinine'), ('Hemoglobin', 'Hemoglobin'), ('White blood cells', 'White blood cells'), ('Platelets', 'Platelets')], help_text='Did you get your labs checked during your flare?', max_length=63, null=True)),
                ('celecoxib', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='treatment.celecoxib')),
                ('colchicine', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='treatment.colchicine')),
                ('ibuprofen', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='treatment.ibuprofen')),
                ('meloxicam', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='treatment.meloxicam')),
                ('methylprednisolone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='treatment.methylprednisolone')),
                ('naproxen', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='treatment.naproxen')),
                ('othertreat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='treatment.othertreat')),
                ('prednisone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='treatment.prednisone')),
                ('tinctureoftime', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='treatment.tinctureoftime')),
                ('urate', models.OneToOneField(blank=True, help_text='What was the uric acid at the time of the flare?', null=True, on_delete=django.db.models.deletion.CASCADE, to='lab.urate')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created'],
            },
        ),
        migrations.CreateModel(
            name='DecisionAid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('perfect_health', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Meaning no chronic medical problems', null=True, verbose_name='Are you in perfect health?')),
                ('monoarticular', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Meaning just a toe, knee, etc.', null=True, verbose_name='Is your flare in just a single joint?')),
                ('ckd', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Do you have CKD?', null=True, verbose_name='Do you have CKD?')),
                ('diabetes', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Type I or type II', null=True, verbose_name='Do you have diabetes?')),
                ('NSAID_contraindication', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Contraindications to NSAIDs', null=True, verbose_name="Have you ever had a heart attack, stroke, congestive heart failure (CHF), Crohn's disease, ulcerative colitis, or a gastrointestinal bleed? Are you on blood thinners?")),
                ('osteoporosis', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Brittle bones', null=True, verbose_name='Do you have osteoporosis?')),
                ('colchicine_contraindication', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Contraindications to colchicine', null=True, verbose_name='Are you on simvastatin, diltiazem, or clarithromycin?')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
    ]
