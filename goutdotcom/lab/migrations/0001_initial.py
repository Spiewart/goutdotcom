# Generated by Django 3.1.7 on 2022-03-11 23:26

import datetime
from decimal import Decimal
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ALT',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('date_drawn', models.DateTimeField(blank=True, default=None, help_text='What day was this lab drawn?', null=True)),
                ('slug', models.SlugField(blank=True, max_length=200, null=True)),
                ('value', models.IntegerField(help_text='ALT (SGPT) is typically reported in units per liter (U/L)')),
                ('units', models.CharField(blank=True, choices=[('mg/dL (milligrams per deciliter)', 'mg/dL (milligrams per deciliter)'), ('g/dL (grams per deciliter)', 'g/dL (grams per deciliter)'), ('cells/mm^3 (cells per cubic millimeter)', 'cells/mm^3 (cells per cubmic millimeter)'), ('PLTS/μL (platelets per microliter)', 'PLTS/μL (platelets per microliter)'), ('U/L (units per liter)', 'U/L (units per liter)')], default='U/L (units per liter)', max_length=100, null=True)),
                ('reference_lower', models.IntegerField(default=7, help_text='Lower limit of normal values for ALT')),
                ('reference_upper', models.IntegerField(default=55, help_text='Upper limit of normal values for ALT')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AST',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('date_drawn', models.DateTimeField(blank=True, default=None, help_text='What day was this lab drawn?', null=True)),
                ('slug', models.SlugField(blank=True, max_length=200, null=True)),
                ('value', models.IntegerField(help_text='AST (SGOT) is typically reported in units per liter (U/L)')),
                ('units', models.CharField(blank=True, choices=[('mg/dL (milligrams per deciliter)', 'mg/dL (milligrams per deciliter)'), ('g/dL (grams per deciliter)', 'g/dL (grams per deciliter)'), ('cells/mm^3 (cells per cubic millimeter)', 'cells/mm^3 (cells per cubmic millimeter)'), ('PLTS/μL (platelets per microliter)', 'PLTS/μL (platelets per microliter)'), ('U/L (units per liter)', 'U/L (units per liter)')], default='U/L (units per liter)', max_length=100, null=True)),
                ('reference_lower', models.IntegerField(default=10, help_text='Lower limit of normal values for AST')),
                ('reference_upper', models.IntegerField(default=40, help_text='Upper limit of normal values for AST')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BaselineALT',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('slug', models.SlugField(blank=True, max_length=200, null=True)),
                ('value', models.IntegerField(help_text='ALT (SGPT) is typically reported in units per liter (U/L)')),
                ('units', models.CharField(blank=True, choices=[('mg/dL (milligrams per deciliter)', 'mg/dL (milligrams per deciliter)'), ('g/dL (grams per deciliter)', 'g/dL (grams per deciliter)'), ('cells/mm^3 (cells per cubic millimeter)', 'cells/mm^3 (cells per cubmic millimeter)'), ('PLTS/μL (platelets per microliter)', 'PLTS/μL (platelets per microliter)'), ('U/L (units per liter)', 'U/L (units per liter)')], default='U/L (units per liter)', max_length=100, null=True)),
                ('reference_lower', models.IntegerField(default=7, help_text='Lower limit of normal values for ALT')),
                ('reference_upper', models.IntegerField(default=55, help_text='Upper limit of normal values for ALT')),
                ('calculated', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BaselineAST',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('slug', models.SlugField(blank=True, max_length=200, null=True)),
                ('value', models.IntegerField(help_text='AST (SGOT) is typically reported in units per liter (U/L)')),
                ('units', models.CharField(blank=True, choices=[('mg/dL (milligrams per deciliter)', 'mg/dL (milligrams per deciliter)'), ('g/dL (grams per deciliter)', 'g/dL (grams per deciliter)'), ('cells/mm^3 (cells per cubic millimeter)', 'cells/mm^3 (cells per cubmic millimeter)'), ('PLTS/μL (platelets per microliter)', 'PLTS/μL (platelets per microliter)'), ('U/L (units per liter)', 'U/L (units per liter)')], default='U/L (units per liter)', max_length=100, null=True)),
                ('reference_lower', models.IntegerField(default=10, help_text='Lower limit of normal values for AST')),
                ('reference_upper', models.IntegerField(default=40, help_text='Upper limit of normal values for AST')),
                ('calculated', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BaselineCreatinine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('slug', models.SlugField(blank=True, max_length=200, null=True)),
                ('value', models.DecimalField(decimal_places=2, help_text='Creatinine is typically reported as milligrams per deciliter (mg/dL)', max_digits=4)),
                ('units', models.CharField(blank=True, choices=[('mg/dL (milligrams per deciliter)', 'mg/dL (milligrams per deciliter)'), ('g/dL (grams per deciliter)', 'g/dL (grams per deciliter)'), ('cells/mm^3 (cells per cubic millimeter)', 'cells/mm^3 (cells per cubmic millimeter)'), ('PLTS/μL (platelets per microliter)', 'PLTS/μL (platelets per microliter)'), ('U/L (units per liter)', 'U/L (units per liter)')], default='mg/dL (milligrams per deciliter)', max_length=100, null=True)),
                ('reference_lower', models.DecimalField(decimal_places=2, default=Decimal('0.7399999999999999911182158029987476766109466552734375'), help_text='Lower limit of normal values for creatinine', max_digits=4)),
                ('reference_upper', models.DecimalField(decimal_places=2, default=Decimal('1.350000000000000088817841970012523233890533447265625'), help_text='Upper limit of normal values for creatinine', max_digits=4)),
                ('calculated', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BaselineHemoglobin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('slug', models.SlugField(blank=True, max_length=200, null=True)),
                ('value', models.DecimalField(decimal_places=1, help_text='HGB (hemoglobin) is typically reporeted in grams per deciliter (g/dL)', max_digits=3)),
                ('units', models.CharField(blank=True, choices=[('mg/dL (milligrams per deciliter)', 'mg/dL (milligrams per deciliter)'), ('g/dL (grams per deciliter)', 'g/dL (grams per deciliter)'), ('cells/mm^3 (cells per cubic millimeter)', 'cells/mm^3 (cells per cubmic millimeter)'), ('PLTS/μL (platelets per microliter)', 'PLTS/μL (platelets per microliter)'), ('U/L (units per liter)', 'U/L (units per liter)')], default='g/dL (grams per deciliter)', max_length=100, null=True)),
                ('reference_lower', models.DecimalField(decimal_places=1, default=Decimal('13.5'), help_text='Lower limit of normal values for hemoglobin', max_digits=3)),
                ('reference_upper', models.DecimalField(decimal_places=1, default=Decimal('17.5'), help_text='Upper limit of normal values for hemoglobin', max_digits=3)),
                ('calculated', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BaselinePlatelet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('slug', models.SlugField(blank=True, max_length=200, null=True)),
                ('value', models.IntegerField(help_text='PLT (platelets) is typically reported in platelets per microliter (PLT/microL)')),
                ('units', models.CharField(blank=True, choices=[('mg/dL (milligrams per deciliter)', 'mg/dL (milligrams per deciliter)'), ('g/dL (grams per deciliter)', 'g/dL (grams per deciliter)'), ('cells/mm^3 (cells per cubic millimeter)', 'cells/mm^3 (cells per cubmic millimeter)'), ('PLTS/μL (platelets per microliter)', 'PLTS/μL (platelets per microliter)'), ('U/L (units per liter)', 'U/L (units per liter)')], default='PLTS/μL (platelets per microliter)', max_length=100, null=True)),
                ('reference_lower', models.IntegerField(default=150, help_text='Lower limit of normal values for platelets')),
                ('reference_upper', models.IntegerField(default=450, help_text='Upper limit of normal values for platelets')),
                ('calculated', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BaselineWBC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('slug', models.SlugField(blank=True, max_length=200, null=True)),
                ('value', models.DecimalField(decimal_places=1, help_text='WBC (white blood cells) is typically reported as cells per cubic millimeter (cells/mm^3)', max_digits=3)),
                ('units', models.CharField(blank=True, choices=[('mg/dL (milligrams per deciliter)', 'mg/dL (milligrams per deciliter)'), ('g/dL (grams per deciliter)', 'g/dL (grams per deciliter)'), ('cells/mm^3 (cells per cubic millimeter)', 'cells/mm^3 (cells per cubmic millimeter)'), ('PLTS/μL (platelets per microliter)', 'PLTS/μL (platelets per microliter)'), ('U/L (units per liter)', 'U/L (units per liter)')], default='cells/mm^3 (cells per cubic millimeter)', max_length=100, null=True)),
                ('reference_lower', models.DecimalField(decimal_places=1, default=Decimal('4.5'), help_text='Lower limit of normal values for WBC', max_digits=3)),
                ('reference_upper', models.DecimalField(decimal_places=1, default=Decimal('11'), help_text='Upper limit of normal values for WBC', max_digits=3)),
                ('calculated', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Creatinine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('date_drawn', models.DateTimeField(blank=True, default=None, help_text='What day was this lab drawn?', null=True)),
                ('slug', models.SlugField(blank=True, max_length=200, null=True)),
                ('value', models.DecimalField(decimal_places=2, help_text='Creatinine is typically reported as milligrams per deciliter (mg/dL)', max_digits=4)),
                ('units', models.CharField(blank=True, choices=[('mg/dL (milligrams per deciliter)', 'mg/dL (milligrams per deciliter)'), ('g/dL (grams per deciliter)', 'g/dL (grams per deciliter)'), ('cells/mm^3 (cells per cubic millimeter)', 'cells/mm^3 (cells per cubmic millimeter)'), ('PLTS/μL (platelets per microliter)', 'PLTS/μL (platelets per microliter)'), ('U/L (units per liter)', 'U/L (units per liter)')], default='mg/dL (milligrams per deciliter)', max_length=100, null=True)),
                ('reference_lower', models.DecimalField(decimal_places=2, default=Decimal('0.7399999999999999911182158029987476766109466552734375'), help_text='Lower limit of normal values for creatinine', max_digits=4)),
                ('reference_upper', models.DecimalField(decimal_places=2, default=Decimal('1.350000000000000088817841970012523233890533447265625'), help_text='Upper limit of normal values for creatinine', max_digits=4)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Hemoglobin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('date_drawn', models.DateTimeField(blank=True, default=None, help_text='What day was this lab drawn?', null=True)),
                ('slug', models.SlugField(blank=True, max_length=200, null=True)),
                ('value', models.DecimalField(decimal_places=1, help_text='HGB (hemoglobin) is typically reporeted in grams per deciliter (g/dL)', max_digits=3)),
                ('units', models.CharField(blank=True, choices=[('mg/dL (milligrams per deciliter)', 'mg/dL (milligrams per deciliter)'), ('g/dL (grams per deciliter)', 'g/dL (grams per deciliter)'), ('cells/mm^3 (cells per cubic millimeter)', 'cells/mm^3 (cells per cubmic millimeter)'), ('PLTS/μL (platelets per microliter)', 'PLTS/μL (platelets per microliter)'), ('U/L (units per liter)', 'U/L (units per liter)')], default='g/dL (grams per deciliter)', max_length=100, null=True)),
                ('reference_lower', models.DecimalField(decimal_places=1, default=Decimal('13.5'), help_text='Lower limit of normal values for hemoglobin', max_digits=3)),
                ('reference_upper', models.DecimalField(decimal_places=1, default=Decimal('17.5'), help_text='Upper limit of normal values for hemoglobin', max_digits=3)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalALT',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('date_drawn', models.DateTimeField(blank=True, default=None, help_text='What day was this lab drawn?', null=True)),
                ('slug', models.SlugField(blank=True, max_length=200, null=True)),
                ('value', models.IntegerField(help_text='ALT (SGPT) is typically reported in units per liter (U/L)')),
                ('units', models.CharField(blank=True, choices=[('mg/dL (milligrams per deciliter)', 'mg/dL (milligrams per deciliter)'), ('g/dL (grams per deciliter)', 'g/dL (grams per deciliter)'), ('cells/mm^3 (cells per cubic millimeter)', 'cells/mm^3 (cells per cubmic millimeter)'), ('PLTS/μL (platelets per microliter)', 'PLTS/μL (platelets per microliter)'), ('U/L (units per liter)', 'U/L (units per liter)')], default='U/L (units per liter)', max_length=100, null=True)),
                ('reference_lower', models.IntegerField(default=7, help_text='Lower limit of normal values for ALT')),
                ('reference_upper', models.IntegerField(default=55, help_text='Upper limit of normal values for ALT')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical alt',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAST',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('date_drawn', models.DateTimeField(blank=True, default=None, help_text='What day was this lab drawn?', null=True)),
                ('slug', models.SlugField(blank=True, max_length=200, null=True)),
                ('value', models.IntegerField(help_text='AST (SGOT) is typically reported in units per liter (U/L)')),
                ('units', models.CharField(blank=True, choices=[('mg/dL (milligrams per deciliter)', 'mg/dL (milligrams per deciliter)'), ('g/dL (grams per deciliter)', 'g/dL (grams per deciliter)'), ('cells/mm^3 (cells per cubic millimeter)', 'cells/mm^3 (cells per cubmic millimeter)'), ('PLTS/μL (platelets per microliter)', 'PLTS/μL (platelets per microliter)'), ('U/L (units per liter)', 'U/L (units per liter)')], default='U/L (units per liter)', max_length=100, null=True)),
                ('reference_lower', models.IntegerField(default=10, help_text='Lower limit of normal values for AST')),
                ('reference_upper', models.IntegerField(default=40, help_text='Upper limit of normal values for AST')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical ast',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBaselineALT',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('slug', models.SlugField(blank=True, max_length=200, null=True)),
                ('value', models.IntegerField(help_text='ALT (SGPT) is typically reported in units per liter (U/L)')),
                ('units', models.CharField(blank=True, choices=[('mg/dL (milligrams per deciliter)', 'mg/dL (milligrams per deciliter)'), ('g/dL (grams per deciliter)', 'g/dL (grams per deciliter)'), ('cells/mm^3 (cells per cubic millimeter)', 'cells/mm^3 (cells per cubmic millimeter)'), ('PLTS/μL (platelets per microliter)', 'PLTS/μL (platelets per microliter)'), ('U/L (units per liter)', 'U/L (units per liter)')], default='U/L (units per liter)', max_length=100, null=True)),
                ('reference_lower', models.IntegerField(default=7, help_text='Lower limit of normal values for ALT')),
                ('reference_upper', models.IntegerField(default=55, help_text='Upper limit of normal values for ALT')),
                ('calculated', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical baseline alt',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBaselineAST',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('slug', models.SlugField(blank=True, max_length=200, null=True)),
                ('value', models.IntegerField(help_text='AST (SGOT) is typically reported in units per liter (U/L)')),
                ('units', models.CharField(blank=True, choices=[('mg/dL (milligrams per deciliter)', 'mg/dL (milligrams per deciliter)'), ('g/dL (grams per deciliter)', 'g/dL (grams per deciliter)'), ('cells/mm^3 (cells per cubic millimeter)', 'cells/mm^3 (cells per cubmic millimeter)'), ('PLTS/μL (platelets per microliter)', 'PLTS/μL (platelets per microliter)'), ('U/L (units per liter)', 'U/L (units per liter)')], default='U/L (units per liter)', max_length=100, null=True)),
                ('reference_lower', models.IntegerField(default=10, help_text='Lower limit of normal values for AST')),
                ('reference_upper', models.IntegerField(default=40, help_text='Upper limit of normal values for AST')),
                ('calculated', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical baseline ast',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBaselineCreatinine',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('slug', models.SlugField(blank=True, max_length=200, null=True)),
                ('value', models.DecimalField(decimal_places=2, help_text='Creatinine is typically reported as milligrams per deciliter (mg/dL)', max_digits=4)),
                ('units', models.CharField(blank=True, choices=[('mg/dL (milligrams per deciliter)', 'mg/dL (milligrams per deciliter)'), ('g/dL (grams per deciliter)', 'g/dL (grams per deciliter)'), ('cells/mm^3 (cells per cubic millimeter)', 'cells/mm^3 (cells per cubmic millimeter)'), ('PLTS/μL (platelets per microliter)', 'PLTS/μL (platelets per microliter)'), ('U/L (units per liter)', 'U/L (units per liter)')], default='mg/dL (milligrams per deciliter)', max_length=100, null=True)),
                ('reference_lower', models.DecimalField(decimal_places=2, default=Decimal('0.7399999999999999911182158029987476766109466552734375'), help_text='Lower limit of normal values for creatinine', max_digits=4)),
                ('reference_upper', models.DecimalField(decimal_places=2, default=Decimal('1.350000000000000088817841970012523233890533447265625'), help_text='Upper limit of normal values for creatinine', max_digits=4)),
                ('calculated', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical baseline creatinine',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBaselineHemoglobin',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('slug', models.SlugField(blank=True, max_length=200, null=True)),
                ('value', models.DecimalField(decimal_places=1, help_text='HGB (hemoglobin) is typically reporeted in grams per deciliter (g/dL)', max_digits=3)),
                ('units', models.CharField(blank=True, choices=[('mg/dL (milligrams per deciliter)', 'mg/dL (milligrams per deciliter)'), ('g/dL (grams per deciliter)', 'g/dL (grams per deciliter)'), ('cells/mm^3 (cells per cubic millimeter)', 'cells/mm^3 (cells per cubmic millimeter)'), ('PLTS/μL (platelets per microliter)', 'PLTS/μL (platelets per microliter)'), ('U/L (units per liter)', 'U/L (units per liter)')], default='g/dL (grams per deciliter)', max_length=100, null=True)),
                ('reference_lower', models.DecimalField(decimal_places=1, default=Decimal('13.5'), help_text='Lower limit of normal values for hemoglobin', max_digits=3)),
                ('reference_upper', models.DecimalField(decimal_places=1, default=Decimal('17.5'), help_text='Upper limit of normal values for hemoglobin', max_digits=3)),
                ('calculated', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical baseline hemoglobin',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBaselinePlatelet',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('slug', models.SlugField(blank=True, max_length=200, null=True)),
                ('value', models.IntegerField(help_text='PLT (platelets) is typically reported in platelets per microliter (PLT/microL)')),
                ('units', models.CharField(blank=True, choices=[('mg/dL (milligrams per deciliter)', 'mg/dL (milligrams per deciliter)'), ('g/dL (grams per deciliter)', 'g/dL (grams per deciliter)'), ('cells/mm^3 (cells per cubic millimeter)', 'cells/mm^3 (cells per cubmic millimeter)'), ('PLTS/μL (platelets per microliter)', 'PLTS/μL (platelets per microliter)'), ('U/L (units per liter)', 'U/L (units per liter)')], default='PLTS/μL (platelets per microliter)', max_length=100, null=True)),
                ('reference_lower', models.IntegerField(default=150, help_text='Lower limit of normal values for platelets')),
                ('reference_upper', models.IntegerField(default=450, help_text='Upper limit of normal values for platelets')),
                ('calculated', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical baseline platelet',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBaselineWBC',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('slug', models.SlugField(blank=True, max_length=200, null=True)),
                ('value', models.DecimalField(decimal_places=1, help_text='WBC (white blood cells) is typically reported as cells per cubic millimeter (cells/mm^3)', max_digits=3)),
                ('units', models.CharField(blank=True, choices=[('mg/dL (milligrams per deciliter)', 'mg/dL (milligrams per deciliter)'), ('g/dL (grams per deciliter)', 'g/dL (grams per deciliter)'), ('cells/mm^3 (cells per cubic millimeter)', 'cells/mm^3 (cells per cubmic millimeter)'), ('PLTS/μL (platelets per microliter)', 'PLTS/μL (platelets per microliter)'), ('U/L (units per liter)', 'U/L (units per liter)')], default='cells/mm^3 (cells per cubic millimeter)', max_length=100, null=True)),
                ('reference_lower', models.DecimalField(decimal_places=1, default=Decimal('4.5'), help_text='Lower limit of normal values for WBC', max_digits=3)),
                ('reference_upper', models.DecimalField(decimal_places=1, default=Decimal('11'), help_text='Upper limit of normal values for WBC', max_digits=3)),
                ('calculated', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical baseline wbc',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCreatinine',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('date_drawn', models.DateTimeField(blank=True, default=None, help_text='What day was this lab drawn?', null=True)),
                ('slug', models.SlugField(blank=True, max_length=200, null=True)),
                ('value', models.DecimalField(decimal_places=2, help_text='Creatinine is typically reported as milligrams per deciliter (mg/dL)', max_digits=4)),
                ('units', models.CharField(blank=True, choices=[('mg/dL (milligrams per deciliter)', 'mg/dL (milligrams per deciliter)'), ('g/dL (grams per deciliter)', 'g/dL (grams per deciliter)'), ('cells/mm^3 (cells per cubic millimeter)', 'cells/mm^3 (cells per cubmic millimeter)'), ('PLTS/μL (platelets per microliter)', 'PLTS/μL (platelets per microliter)'), ('U/L (units per liter)', 'U/L (units per liter)')], default='mg/dL (milligrams per deciliter)', max_length=100, null=True)),
                ('reference_lower', models.DecimalField(decimal_places=2, default=Decimal('0.7399999999999999911182158029987476766109466552734375'), help_text='Lower limit of normal values for creatinine', max_digits=4)),
                ('reference_upper', models.DecimalField(decimal_places=2, default=Decimal('1.350000000000000088817841970012523233890533447265625'), help_text='Upper limit of normal values for creatinine', max_digits=4)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical creatinine',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalHemoglobin',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('date_drawn', models.DateTimeField(blank=True, default=None, help_text='What day was this lab drawn?', null=True)),
                ('slug', models.SlugField(blank=True, max_length=200, null=True)),
                ('value', models.DecimalField(decimal_places=1, help_text='HGB (hemoglobin) is typically reporeted in grams per deciliter (g/dL)', max_digits=3)),
                ('units', models.CharField(blank=True, choices=[('mg/dL (milligrams per deciliter)', 'mg/dL (milligrams per deciliter)'), ('g/dL (grams per deciliter)', 'g/dL (grams per deciliter)'), ('cells/mm^3 (cells per cubic millimeter)', 'cells/mm^3 (cells per cubmic millimeter)'), ('PLTS/μL (platelets per microliter)', 'PLTS/μL (platelets per microliter)'), ('U/L (units per liter)', 'U/L (units per liter)')], default='g/dL (grams per deciliter)', max_length=100, null=True)),
                ('reference_lower', models.DecimalField(decimal_places=1, default=Decimal('13.5'), help_text='Lower limit of normal values for hemoglobin', max_digits=3)),
                ('reference_upper', models.DecimalField(decimal_places=1, default=Decimal('17.5'), help_text='Upper limit of normal values for hemoglobin', max_digits=3)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical hemoglobin',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLabCheck',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('due', models.DateField(default=datetime.date(2022, 4, 22), help_text='When is this lab check due?')),
                ('completed', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Is this lab check completed?')),
                ('completed_date', models.DateField(blank=True, default=None, help_text='When was this lab check completed?', null=True)),
                ('slug', models.SlugField(max_length=200, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical lab check',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPlatelet',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('date_drawn', models.DateTimeField(blank=True, default=None, help_text='What day was this lab drawn?', null=True)),
                ('slug', models.SlugField(blank=True, max_length=200, null=True)),
                ('value', models.IntegerField(help_text='PLT (platelets) is typically reported in platelets per microliter (PLT/microL)')),
                ('units', models.CharField(blank=True, choices=[('mg/dL (milligrams per deciliter)', 'mg/dL (milligrams per deciliter)'), ('g/dL (grams per deciliter)', 'g/dL (grams per deciliter)'), ('cells/mm^3 (cells per cubic millimeter)', 'cells/mm^3 (cells per cubmic millimeter)'), ('PLTS/μL (platelets per microliter)', 'PLTS/μL (platelets per microliter)'), ('U/L (units per liter)', 'U/L (units per liter)')], default='PLTS/μL (platelets per microliter)', max_length=100, null=True)),
                ('reference_lower', models.IntegerField(default=150, help_text='Lower limit of normal values for platelets')),
                ('reference_upper', models.IntegerField(default=450, help_text='Upper limit of normal values for platelets')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical platelet',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalUrate',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('date_drawn', models.DateTimeField(blank=True, default=None, help_text='What day was this lab drawn?', null=True)),
                ('slug', models.SlugField(blank=True, max_length=200, null=True)),
                ('value', models.DecimalField(decimal_places=1, help_text='Uric acid is typically reported in micrograms per deciliter (mg/dL)', max_digits=3)),
                ('units', models.CharField(blank=True, choices=[('mg/dL (milligrams per deciliter)', 'mg/dL (milligrams per deciliter)'), ('g/dL (grams per deciliter)', 'g/dL (grams per deciliter)'), ('cells/mm^3 (cells per cubic millimeter)', 'cells/mm^3 (cells per cubmic millimeter)'), ('PLTS/μL (platelets per microliter)', 'PLTS/μL (platelets per microliter)'), ('U/L (units per liter)', 'U/L (units per liter)')], default='mg/dL (milligrams per deciliter)', max_length=100, null=True)),
                ('reference_lower', models.DecimalField(decimal_places=1, default=3.5, help_text='Lower limit of normal values for urate', max_digits=3)),
                ('reference_upper', models.DecimalField(decimal_places=1, default=7.2, help_text='Upper limit of normal values for urate', max_digits=3)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical urate',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalWBC',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('date_drawn', models.DateTimeField(blank=True, default=None, help_text='What day was this lab drawn?', null=True)),
                ('slug', models.SlugField(blank=True, max_length=200, null=True)),
                ('value', models.DecimalField(decimal_places=1, help_text='WBC (white blood cells) is typically reported as cells per cubic millimeter (cells/mm^3)', max_digits=3)),
                ('units', models.CharField(blank=True, choices=[('mg/dL (milligrams per deciliter)', 'mg/dL (milligrams per deciliter)'), ('g/dL (grams per deciliter)', 'g/dL (grams per deciliter)'), ('cells/mm^3 (cells per cubic millimeter)', 'cells/mm^3 (cells per cubmic millimeter)'), ('PLTS/μL (platelets per microliter)', 'PLTS/μL (platelets per microliter)'), ('U/L (units per liter)', 'U/L (units per liter)')], default='cells/mm^3 (cells per cubic millimeter)', max_length=100, null=True)),
                ('reference_lower', models.DecimalField(decimal_places=1, default=Decimal('4.5'), help_text='Lower limit of normal values for WBC', max_digits=3)),
                ('reference_upper', models.DecimalField(decimal_places=1, default=Decimal('11'), help_text='Upper limit of normal values for WBC', max_digits=3)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical wbc',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LabCheck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('due', models.DateField(default=datetime.date(2022, 4, 22), help_text='When is this lab check due?')),
                ('completed', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Is this lab check completed?')),
                ('completed_date', models.DateField(blank=True, default=None, help_text='When was this lab check completed?', null=True)),
                ('slug', models.SlugField(max_length=200, null=True)),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Platelet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('date_drawn', models.DateTimeField(blank=True, default=None, help_text='What day was this lab drawn?', null=True)),
                ('slug', models.SlugField(blank=True, max_length=200, null=True)),
                ('value', models.IntegerField(help_text='PLT (platelets) is typically reported in platelets per microliter (PLT/microL)')),
                ('units', models.CharField(blank=True, choices=[('mg/dL (milligrams per deciliter)', 'mg/dL (milligrams per deciliter)'), ('g/dL (grams per deciliter)', 'g/dL (grams per deciliter)'), ('cells/mm^3 (cells per cubic millimeter)', 'cells/mm^3 (cells per cubmic millimeter)'), ('PLTS/μL (platelets per microliter)', 'PLTS/μL (platelets per microliter)'), ('U/L (units per liter)', 'U/L (units per liter)')], default='PLTS/μL (platelets per microliter)', max_length=100, null=True)),
                ('reference_lower', models.IntegerField(default=150, help_text='Lower limit of normal values for platelets')),
                ('reference_upper', models.IntegerField(default=450, help_text='Upper limit of normal values for platelets')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Urate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('date_drawn', models.DateTimeField(blank=True, default=None, help_text='What day was this lab drawn?', null=True)),
                ('slug', models.SlugField(blank=True, max_length=200, null=True)),
                ('value', models.DecimalField(decimal_places=1, help_text='Uric acid is typically reported in micrograms per deciliter (mg/dL)', max_digits=3)),
                ('units', models.CharField(blank=True, choices=[('mg/dL (milligrams per deciliter)', 'mg/dL (milligrams per deciliter)'), ('g/dL (grams per deciliter)', 'g/dL (grams per deciliter)'), ('cells/mm^3 (cells per cubic millimeter)', 'cells/mm^3 (cells per cubmic millimeter)'), ('PLTS/μL (platelets per microliter)', 'PLTS/μL (platelets per microliter)'), ('U/L (units per liter)', 'U/L (units per liter)')], default='mg/dL (milligrams per deciliter)', max_length=100, null=True)),
                ('reference_lower', models.DecimalField(decimal_places=1, default=3.5, help_text='Lower limit of normal values for urate', max_digits=3)),
                ('reference_upper', models.DecimalField(decimal_places=1, default=7.2, help_text='Upper limit of normal values for urate', max_digits=3)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WBC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('date_drawn', models.DateTimeField(blank=True, default=None, help_text='What day was this lab drawn?', null=True)),
                ('slug', models.SlugField(blank=True, max_length=200, null=True)),
                ('value', models.DecimalField(decimal_places=1, help_text='WBC (white blood cells) is typically reported as cells per cubic millimeter (cells/mm^3)', max_digits=3)),
                ('units', models.CharField(blank=True, choices=[('mg/dL (milligrams per deciliter)', 'mg/dL (milligrams per deciliter)'), ('g/dL (grams per deciliter)', 'g/dL (grams per deciliter)'), ('cells/mm^3 (cells per cubic millimeter)', 'cells/mm^3 (cells per cubmic millimeter)'), ('PLTS/μL (platelets per microliter)', 'PLTS/μL (platelets per microliter)'), ('U/L (units per liter)', 'U/L (units per liter)')], default='cells/mm^3 (cells per cubic millimeter)', max_length=100, null=True)),
                ('reference_lower', models.DecimalField(decimal_places=1, default=Decimal('4.5'), help_text='Lower limit of normal values for WBC', max_digits=3)),
                ('reference_upper', models.DecimalField(decimal_places=1, default=Decimal('11'), help_text='Upper limit of normal values for WBC', max_digits=3)),
                ('abnormal_followup', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='lab.wbc')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
