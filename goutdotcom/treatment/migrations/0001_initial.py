# Generated by Django 3.1.7 on 2022-01-29 02:21

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_extensions.db.fields
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ppxaid', '0001_initial'),
        ('flareaid', '0002_auto_20220129_0221'),
    ]

    operations = [
        migrations.CreateModel(
            name='Allopurinol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('intolerant', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Are you intolerant or should / will not take <django.db.models.fields.CharField>?', verbose_name='Intolerance')),
                ('active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Is this medication active?', verbose_name='Active Status')),
                ('date_ended', models.DateField(blank=True, default=None, null=True)),
                ('date_started', models.DateField(blank=True, default=django.utils.timezone.now, null=True)),
                ('generic_name', models.CharField(choices=[('allopurinol', 'Allopurinol'), ('febuxostat', 'Febuxostat'), ('indomethacin', 'Indomethacin'), ('prednisone', 'Prednisone'), ('colchicine', 'Colchicine'), ('probenecid', 'Probenecid'), ('pegloticase', 'Pegloticase'), ('ibuprofen', 'Ibuprofen'), ('naproxen', 'Naproxen'), ('meloxicam', 'Meloxicam'), ('celecoxib', 'Celecoxib'), ('methylprednisolone', 'Methylprednisolone'), ('tinctureoftime', 'Tinctureoftime'), ('other', 'Other')], default='allopurinol', max_length=60)),
                ('dose', models.IntegerField(choices=[(50, '50 mg'), (100, '100 mg'), (150, '150 mg'), (200, '200 mg'), (250, '250 mg'), (300, '300 mg'), (350, '350 mg'), (400, '400 mg'), (450, '450 mg'), (500, '500 mg'), (550, '550 mg'), (600, '600 mg'), (650, '650 mg'), (700, '700 mg'), (750, '750 mg'), (800, '800 mg'), (850, '850 mg'), (900, '900 mg')], default=100, validators=[django.core.validators.MaxValueValidator(750), django.core.validators.MinValueValidator(50)])),
                ('freq', models.CharField(choices=[('daily', 'Once daily'), ('twice daily', 'Twice daily'), ('three times daily', 'Three times daily'), ('every other week', 'Every 2 weeks'), ('once', 'Once')], default='daily', max_length=50)),
                ('side_effects', models.CharField(blank=True, choices=[('Rash', 'Rash'), ('Hypersensitivity syndrome', 'Hypersensitivity syndrome'), ('Elevated LFTs', 'Elevated LFTs'), ('Cytopenias', 'Cytopenias'), ('GI upset', 'GI upset'), ('None', 'None')], help_text='Have you had any side effects?', max_length=100, null=True)),
                ('de_sensitized', models.BooleanField(blank=True, help_text='Have you been de-sensitized to allopurinol?', null=True)),
                ('drug_class', models.CharField(choices=[('urate-lowering therapy', 'Urate-lowering therapy'), ('systemic steroid', 'Systemic steroid'), ('anti-inflammatory', 'Anti-inflammatory'), ('nonsteroidal anti-inflammatory drug', 'Nonsteroidal anti-inflammatory drug'), ('urate extreagogue', 'Urate excretagogue'), ('local steroid', 'Local steroid'), ('recombinant uricase', 'Recombinant uricase'), ('other', 'Other')], default='urate-lowering therapy', max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Celecoxib',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('intolerant', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Are you intolerant or should / will not take <django.db.models.fields.CharField>?', verbose_name='Intolerance')),
                ('active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Is this medication active?', verbose_name='Active Status')),
                ('date_started', models.DateField(blank=True, null=True)),
                ('date_ended', models.DateField(blank=True, default=None, null=True)),
                ('prn', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Do you take this medication only as needed (PRN)?', null=True)),
                ('as_prophylaxis', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Is this for flare prophylaxis while initiating ULT?', null=True, verbose_name='Flare prophylaxis?')),
                ('prophylaxis_finished', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=None, help_text='Are you finished with flare prophylaxis?', null=True, verbose_name='Is prophylaxis finished?')),
                ('duration', models.IntegerField(blank=True, default=7, null=True, validators=[django.core.validators.MaxValueValidator(14), django.core.validators.MinValueValidator(1)])),
                ('generic_name', models.CharField(choices=[('allopurinol', 'Allopurinol'), ('febuxostat', 'Febuxostat'), ('indomethacin', 'Indomethacin'), ('prednisone', 'Prednisone'), ('colchicine', 'Colchicine'), ('probenecid', 'Probenecid'), ('pegloticase', 'Pegloticase'), ('ibuprofen', 'Ibuprofen'), ('naproxen', 'Naproxen'), ('meloxicam', 'Meloxicam'), ('celecoxib', 'Celecoxib'), ('methylprednisolone', 'Methylprednisolone'), ('tinctureoftime', 'Tinctureoftime'), ('other', 'Other')], default='celecoxib', max_length=60)),
                ('dose', models.IntegerField(blank=True, choices=[(200, '200 mg'), (400, '400 mg')], null=True)),
                ('freq', models.CharField(blank=True, choices=[('daily', 'Once daily'), ('twice daily', 'Twice daily'), ('three times daily', 'Three times daily'), ('every other week', 'Every 2 weeks'), ('once', 'Once')], default='daily', max_length=50)),
                ('side_effects', models.CharField(blank=True, choices=[('Rash', 'Rash'), ('Kidney failure', 'Kidney failure'), ('Stomach ulcer', 'Stomach ulcer'), ('GI upset', 'GI upset'), ('Medication interaction', 'Medication interaction'), ('None', 'None')], help_text='Have you had any side effects?', max_length=100, null=True)),
                ('drug_class', models.CharField(choices=[('urate-lowering therapy', 'Urate-lowering therapy'), ('systemic steroid', 'Systemic steroid'), ('anti-inflammatory', 'Anti-inflammatory'), ('nonsteroidal anti-inflammatory drug', 'Nonsteroidal anti-inflammatory drug'), ('urate extreagogue', 'Urate excretagogue'), ('local steroid', 'Local steroid'), ('recombinant uricase', 'Recombinant uricase'), ('other', 'Other')], default='nonsteroidal anti-inflammatory drug', max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Colchicine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('intolerant', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Are you intolerant or should / will not take <django.db.models.fields.CharField>?', verbose_name='Intolerance')),
                ('active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Is this medication active?', verbose_name='Active Status')),
                ('date_started', models.DateField(blank=True, null=True)),
                ('date_ended', models.DateField(blank=True, default=None, null=True)),
                ('prn', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Do you take this medication only as needed (PRN)?', null=True)),
                ('as_prophylaxis', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Is this for flare prophylaxis while initiating ULT?', null=True, verbose_name='Flare prophylaxis?')),
                ('prophylaxis_finished', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=None, help_text='Are you finished with flare prophylaxis?', null=True, verbose_name='Is prophylaxis finished?')),
                ('generic_name', models.CharField(choices=[('allopurinol', 'Allopurinol'), ('febuxostat', 'Febuxostat'), ('indomethacin', 'Indomethacin'), ('prednisone', 'Prednisone'), ('colchicine', 'Colchicine'), ('probenecid', 'Probenecid'), ('pegloticase', 'Pegloticase'), ('ibuprofen', 'Ibuprofen'), ('naproxen', 'Naproxen'), ('meloxicam', 'Meloxicam'), ('celecoxib', 'Celecoxib'), ('methylprednisolone', 'Methylprednisolone'), ('tinctureoftime', 'Tinctureoftime'), ('other', 'Other')], default='colchicine', max_length=60)),
                ('dose', models.FloatField(blank=True, choices=[(0.6, '0.6 mg'), (Decimal('1.2'), '1.2 mg')], default=1.2, null=True)),
                ('freq', models.CharField(blank=True, choices=[('daily', 'Once daily'), ('twice daily', 'Twice daily'), ('three times daily', 'Three times daily'), ('every other week', 'Every 2 weeks'), ('once', 'Once')], default='once', max_length=50, null=True)),
                ('dose2', models.FloatField(blank=True, choices=[(0.6, '0.6 mg'), (Decimal('1.2'), '1.2 mg')], default=0.6, null=True)),
                ('freq2', models.CharField(blank=True, choices=[('daily', 'Once daily'), ('twice daily', 'Twice daily'), ('three times daily', 'Three times daily'), ('every other week', 'Every 2 weeks'), ('once', 'Once')], default='once', max_length=50, null=True)),
                ('dose3', models.FloatField(blank=True, choices=[(0.6, '0.6 mg'), (Decimal('1.2'), '1.2 mg')], default=0.6, null=True)),
                ('freq3', models.CharField(blank=True, choices=[('daily', 'Once daily'), ('twice daily', 'Twice daily'), ('three times daily', 'Three times daily'), ('every other week', 'Every 2 weeks'), ('once', 'Once')], default='twice daily', max_length=50, null=True)),
                ('duration', models.IntegerField(blank=True, default=7, null=True, validators=[django.core.validators.MaxValueValidator(14), django.core.validators.MinValueValidator(1)])),
                ('side_effects', models.CharField(blank=True, choices=[('GI upset', 'GI upset'), ('Medication interaction', 'Medication interaction'), ('None', 'None')], help_text='Have you had any side effects?', max_length=100, null=True)),
                ('drug_class', models.CharField(choices=[('urate-lowering therapy', 'Urate-lowering therapy'), ('systemic steroid', 'Systemic steroid'), ('anti-inflammatory', 'Anti-inflammatory'), ('nonsteroidal anti-inflammatory drug', 'Nonsteroidal anti-inflammatory drug'), ('urate extreagogue', 'Urate excretagogue'), ('local steroid', 'Local steroid'), ('recombinant uricase', 'Recombinant uricase'), ('other', 'Other')], default='anti-inflammatory', max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Febuxostat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('intolerant', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Are you intolerant or should / will not take <django.db.models.fields.CharField>?', verbose_name='Intolerance')),
                ('active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Is this medication active?', verbose_name='Active Status')),
                ('date_ended', models.DateField(blank=True, default=None, null=True)),
                ('date_started', models.DateField(blank=True, default=django.utils.timezone.now, null=True)),
                ('generic_name', models.CharField(choices=[('allopurinol', 'Allopurinol'), ('febuxostat', 'Febuxostat'), ('indomethacin', 'Indomethacin'), ('prednisone', 'Prednisone'), ('colchicine', 'Colchicine'), ('probenecid', 'Probenecid'), ('pegloticase', 'Pegloticase'), ('ibuprofen', 'Ibuprofen'), ('naproxen', 'Naproxen'), ('meloxicam', 'Meloxicam'), ('celecoxib', 'Celecoxib'), ('methylprednisolone', 'Methylprednisolone'), ('tinctureoftime', 'Tinctureoftime'), ('other', 'Other')], default='febuxostat', max_length=60)),
                ('dose', models.IntegerField(choices=[(20, '20 mg'), (40, '40 mg'), (60, '60 mg'), (80, '80 mg'), (100, '100 mg'), (120, '120 mg')], default=40, validators=[django.core.validators.MaxValueValidator(120), django.core.validators.MinValueValidator(20)])),
                ('freq', models.CharField(choices=[('daily', 'Once daily'), ('twice daily', 'Twice daily'), ('three times daily', 'Three times daily'), ('every other week', 'Every 2 weeks'), ('once', 'Once')], default='daily', max_length=50)),
                ('side_effects', models.CharField(blank=True, choices=[('Rash', 'Rash'), ('Hypersensitivity syndrome', 'Hypersensitivity syndrome'), ('Elevated LFTs', 'Elevated LFTs'), ('Cytopenias', 'Cytopenias'), ('GI upset', 'GI upset'), ('None', 'None')], help_text='Have you had any side effects?', max_length=100, null=True)),
                ('drug_class', models.CharField(choices=[('urate-lowering therapy', 'Urate-lowering therapy'), ('systemic steroid', 'Systemic steroid'), ('anti-inflammatory', 'Anti-inflammatory'), ('nonsteroidal anti-inflammatory drug', 'Nonsteroidal anti-inflammatory drug'), ('urate extreagogue', 'Urate excretagogue'), ('local steroid', 'Local steroid'), ('recombinant uricase', 'Recombinant uricase'), ('other', 'Other')], default='urate-lowering therapy', max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalAllopurinol',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('intolerant', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Are you intolerant or should / will not take <django.db.models.fields.CharField>?', verbose_name='Intolerance')),
                ('active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Is this medication active?', verbose_name='Active Status')),
                ('date_ended', models.DateField(blank=True, default=None, null=True)),
                ('date_started', models.DateField(blank=True, default=django.utils.timezone.now, null=True)),
                ('generic_name', models.CharField(choices=[('allopurinol', 'Allopurinol'), ('febuxostat', 'Febuxostat'), ('indomethacin', 'Indomethacin'), ('prednisone', 'Prednisone'), ('colchicine', 'Colchicine'), ('probenecid', 'Probenecid'), ('pegloticase', 'Pegloticase'), ('ibuprofen', 'Ibuprofen'), ('naproxen', 'Naproxen'), ('meloxicam', 'Meloxicam'), ('celecoxib', 'Celecoxib'), ('methylprednisolone', 'Methylprednisolone'), ('tinctureoftime', 'Tinctureoftime'), ('other', 'Other')], default='allopurinol', max_length=60)),
                ('dose', models.IntegerField(choices=[(50, '50 mg'), (100, '100 mg'), (150, '150 mg'), (200, '200 mg'), (250, '250 mg'), (300, '300 mg'), (350, '350 mg'), (400, '400 mg'), (450, '450 mg'), (500, '500 mg'), (550, '550 mg'), (600, '600 mg'), (650, '650 mg'), (700, '700 mg'), (750, '750 mg'), (800, '800 mg'), (850, '850 mg'), (900, '900 mg')], default=100, validators=[django.core.validators.MaxValueValidator(750), django.core.validators.MinValueValidator(50)])),
                ('freq', models.CharField(choices=[('daily', 'Once daily'), ('twice daily', 'Twice daily'), ('three times daily', 'Three times daily'), ('every other week', 'Every 2 weeks'), ('once', 'Once')], default='daily', max_length=50)),
                ('side_effects', models.CharField(blank=True, choices=[('Rash', 'Rash'), ('Hypersensitivity syndrome', 'Hypersensitivity syndrome'), ('Elevated LFTs', 'Elevated LFTs'), ('Cytopenias', 'Cytopenias'), ('GI upset', 'GI upset'), ('None', 'None')], help_text='Have you had any side effects?', max_length=100, null=True)),
                ('de_sensitized', models.BooleanField(blank=True, help_text='Have you been de-sensitized to allopurinol?', null=True)),
                ('drug_class', models.CharField(choices=[('urate-lowering therapy', 'Urate-lowering therapy'), ('systemic steroid', 'Systemic steroid'), ('anti-inflammatory', 'Anti-inflammatory'), ('nonsteroidal anti-inflammatory drug', 'Nonsteroidal anti-inflammatory drug'), ('urate extreagogue', 'Urate excretagogue'), ('local steroid', 'Local steroid'), ('recombinant uricase', 'Recombinant uricase'), ('other', 'Other')], default='urate-lowering therapy', max_length=50)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical allopurinol',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCelecoxib',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('intolerant', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Are you intolerant or should / will not take <django.db.models.fields.CharField>?', verbose_name='Intolerance')),
                ('active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Is this medication active?', verbose_name='Active Status')),
                ('date_started', models.DateField(blank=True, null=True)),
                ('date_ended', models.DateField(blank=True, default=None, null=True)),
                ('prn', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Do you take this medication only as needed (PRN)?', null=True)),
                ('as_prophylaxis', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Is this for flare prophylaxis while initiating ULT?', null=True, verbose_name='Flare prophylaxis?')),
                ('prophylaxis_finished', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=None, help_text='Are you finished with flare prophylaxis?', null=True, verbose_name='Is prophylaxis finished?')),
                ('duration', models.IntegerField(blank=True, default=7, null=True, validators=[django.core.validators.MaxValueValidator(14), django.core.validators.MinValueValidator(1)])),
                ('generic_name', models.CharField(choices=[('allopurinol', 'Allopurinol'), ('febuxostat', 'Febuxostat'), ('indomethacin', 'Indomethacin'), ('prednisone', 'Prednisone'), ('colchicine', 'Colchicine'), ('probenecid', 'Probenecid'), ('pegloticase', 'Pegloticase'), ('ibuprofen', 'Ibuprofen'), ('naproxen', 'Naproxen'), ('meloxicam', 'Meloxicam'), ('celecoxib', 'Celecoxib'), ('methylprednisolone', 'Methylprednisolone'), ('tinctureoftime', 'Tinctureoftime'), ('other', 'Other')], default='celecoxib', max_length=60)),
                ('dose', models.IntegerField(blank=True, choices=[(200, '200 mg'), (400, '400 mg')], null=True)),
                ('freq', models.CharField(blank=True, choices=[('daily', 'Once daily'), ('twice daily', 'Twice daily'), ('three times daily', 'Three times daily'), ('every other week', 'Every 2 weeks'), ('once', 'Once')], default='daily', max_length=50)),
                ('side_effects', models.CharField(blank=True, choices=[('Rash', 'Rash'), ('Kidney failure', 'Kidney failure'), ('Stomach ulcer', 'Stomach ulcer'), ('GI upset', 'GI upset'), ('Medication interaction', 'Medication interaction'), ('None', 'None')], help_text='Have you had any side effects?', max_length=100, null=True)),
                ('drug_class', models.CharField(choices=[('urate-lowering therapy', 'Urate-lowering therapy'), ('systemic steroid', 'Systemic steroid'), ('anti-inflammatory', 'Anti-inflammatory'), ('nonsteroidal anti-inflammatory drug', 'Nonsteroidal anti-inflammatory drug'), ('urate extreagogue', 'Urate excretagogue'), ('local steroid', 'Local steroid'), ('recombinant uricase', 'Recombinant uricase'), ('other', 'Other')], default='nonsteroidal anti-inflammatory drug', max_length=50)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical celecoxib',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalColchicine',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('intolerant', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Are you intolerant or should / will not take <django.db.models.fields.CharField>?', verbose_name='Intolerance')),
                ('active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Is this medication active?', verbose_name='Active Status')),
                ('date_started', models.DateField(blank=True, null=True)),
                ('date_ended', models.DateField(blank=True, default=None, null=True)),
                ('prn', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Do you take this medication only as needed (PRN)?', null=True)),
                ('as_prophylaxis', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Is this for flare prophylaxis while initiating ULT?', null=True, verbose_name='Flare prophylaxis?')),
                ('prophylaxis_finished', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=None, help_text='Are you finished with flare prophylaxis?', null=True, verbose_name='Is prophylaxis finished?')),
                ('generic_name', models.CharField(choices=[('allopurinol', 'Allopurinol'), ('febuxostat', 'Febuxostat'), ('indomethacin', 'Indomethacin'), ('prednisone', 'Prednisone'), ('colchicine', 'Colchicine'), ('probenecid', 'Probenecid'), ('pegloticase', 'Pegloticase'), ('ibuprofen', 'Ibuprofen'), ('naproxen', 'Naproxen'), ('meloxicam', 'Meloxicam'), ('celecoxib', 'Celecoxib'), ('methylprednisolone', 'Methylprednisolone'), ('tinctureoftime', 'Tinctureoftime'), ('other', 'Other')], default='colchicine', max_length=60)),
                ('dose', models.FloatField(blank=True, choices=[(0.6, '0.6 mg'), (Decimal('1.2'), '1.2 mg')], default=1.2, null=True)),
                ('freq', models.CharField(blank=True, choices=[('daily', 'Once daily'), ('twice daily', 'Twice daily'), ('three times daily', 'Three times daily'), ('every other week', 'Every 2 weeks'), ('once', 'Once')], default='once', max_length=50, null=True)),
                ('dose2', models.FloatField(blank=True, choices=[(0.6, '0.6 mg'), (Decimal('1.2'), '1.2 mg')], default=0.6, null=True)),
                ('freq2', models.CharField(blank=True, choices=[('daily', 'Once daily'), ('twice daily', 'Twice daily'), ('three times daily', 'Three times daily'), ('every other week', 'Every 2 weeks'), ('once', 'Once')], default='once', max_length=50, null=True)),
                ('dose3', models.FloatField(blank=True, choices=[(0.6, '0.6 mg'), (Decimal('1.2'), '1.2 mg')], default=0.6, null=True)),
                ('freq3', models.CharField(blank=True, choices=[('daily', 'Once daily'), ('twice daily', 'Twice daily'), ('three times daily', 'Three times daily'), ('every other week', 'Every 2 weeks'), ('once', 'Once')], default='twice daily', max_length=50, null=True)),
                ('duration', models.IntegerField(blank=True, default=7, null=True, validators=[django.core.validators.MaxValueValidator(14), django.core.validators.MinValueValidator(1)])),
                ('side_effects', models.CharField(blank=True, choices=[('GI upset', 'GI upset'), ('Medication interaction', 'Medication interaction'), ('None', 'None')], help_text='Have you had any side effects?', max_length=100, null=True)),
                ('drug_class', models.CharField(choices=[('urate-lowering therapy', 'Urate-lowering therapy'), ('systemic steroid', 'Systemic steroid'), ('anti-inflammatory', 'Anti-inflammatory'), ('nonsteroidal anti-inflammatory drug', 'Nonsteroidal anti-inflammatory drug'), ('urate extreagogue', 'Urate excretagogue'), ('local steroid', 'Local steroid'), ('recombinant uricase', 'Recombinant uricase'), ('other', 'Other')], default='anti-inflammatory', max_length=50)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical colchicine',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalFebuxostat',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('intolerant', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Are you intolerant or should / will not take <django.db.models.fields.CharField>?', verbose_name='Intolerance')),
                ('active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Is this medication active?', verbose_name='Active Status')),
                ('date_ended', models.DateField(blank=True, default=None, null=True)),
                ('date_started', models.DateField(blank=True, default=django.utils.timezone.now, null=True)),
                ('generic_name', models.CharField(choices=[('allopurinol', 'Allopurinol'), ('febuxostat', 'Febuxostat'), ('indomethacin', 'Indomethacin'), ('prednisone', 'Prednisone'), ('colchicine', 'Colchicine'), ('probenecid', 'Probenecid'), ('pegloticase', 'Pegloticase'), ('ibuprofen', 'Ibuprofen'), ('naproxen', 'Naproxen'), ('meloxicam', 'Meloxicam'), ('celecoxib', 'Celecoxib'), ('methylprednisolone', 'Methylprednisolone'), ('tinctureoftime', 'Tinctureoftime'), ('other', 'Other')], default='febuxostat', max_length=60)),
                ('dose', models.IntegerField(choices=[(20, '20 mg'), (40, '40 mg'), (60, '60 mg'), (80, '80 mg'), (100, '100 mg'), (120, '120 mg')], default=40, validators=[django.core.validators.MaxValueValidator(120), django.core.validators.MinValueValidator(20)])),
                ('freq', models.CharField(choices=[('daily', 'Once daily'), ('twice daily', 'Twice daily'), ('three times daily', 'Three times daily'), ('every other week', 'Every 2 weeks'), ('once', 'Once')], default='daily', max_length=50)),
                ('side_effects', models.CharField(blank=True, choices=[('Rash', 'Rash'), ('Hypersensitivity syndrome', 'Hypersensitivity syndrome'), ('Elevated LFTs', 'Elevated LFTs'), ('Cytopenias', 'Cytopenias'), ('GI upset', 'GI upset'), ('None', 'None')], help_text='Have you had any side effects?', max_length=100, null=True)),
                ('drug_class', models.CharField(choices=[('urate-lowering therapy', 'Urate-lowering therapy'), ('systemic steroid', 'Systemic steroid'), ('anti-inflammatory', 'Anti-inflammatory'), ('nonsteroidal anti-inflammatory drug', 'Nonsteroidal anti-inflammatory drug'), ('urate extreagogue', 'Urate excretagogue'), ('local steroid', 'Local steroid'), ('recombinant uricase', 'Recombinant uricase'), ('other', 'Other')], default='urate-lowering therapy', max_length=50)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical febuxostat',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalIbuprofen',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('intolerant', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Are you intolerant or should / will not take <django.db.models.fields.CharField>?', verbose_name='Intolerance')),
                ('active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Is this medication active?', verbose_name='Active Status')),
                ('date_started', models.DateField(blank=True, null=True)),
                ('date_ended', models.DateField(blank=True, default=None, null=True)),
                ('prn', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Do you take this medication only as needed (PRN)?', null=True)),
                ('as_prophylaxis', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Is this for flare prophylaxis while initiating ULT?', null=True, verbose_name='Flare prophylaxis?')),
                ('prophylaxis_finished', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=None, help_text='Are you finished with flare prophylaxis?', null=True, verbose_name='Is prophylaxis finished?')),
                ('duration', models.IntegerField(blank=True, default=7, null=True, validators=[django.core.validators.MaxValueValidator(14), django.core.validators.MinValueValidator(1)])),
                ('generic_name', models.CharField(choices=[('allopurinol', 'Allopurinol'), ('febuxostat', 'Febuxostat'), ('indomethacin', 'Indomethacin'), ('prednisone', 'Prednisone'), ('colchicine', 'Colchicine'), ('probenecid', 'Probenecid'), ('pegloticase', 'Pegloticase'), ('ibuprofen', 'Ibuprofen'), ('naproxen', 'Naproxen'), ('meloxicam', 'Meloxicam'), ('celecoxib', 'Celecoxib'), ('methylprednisolone', 'Methylprednisolone'), ('tinctureoftime', 'Tinctureoftime'), ('other', 'Other')], default='ibuprofen', max_length=60)),
                ('dose', models.IntegerField(blank=True, choices=[(200, '200 mg'), (400, '400 mg'), (600, '600 mg'), (800, '800 mg')], default=800, null=True)),
                ('freq', models.CharField(blank=True, choices=[('daily', 'Once daily'), ('twice daily', 'Twice daily'), ('three times daily', 'Three times daily'), ('every other week', 'Every 2 weeks'), ('once', 'Once')], default='three times daily', max_length=50, null=True)),
                ('side_effects', models.CharField(blank=True, choices=[('Rash', 'Rash'), ('Kidney failure', 'Kidney failure'), ('Stomach ulcer', 'Stomach ulcer'), ('GI upset', 'GI upset'), ('Medication interaction', 'Medication interaction'), ('None', 'None')], help_text='Have you had any side effects?', max_length=100, null=True)),
                ('drug_class', models.CharField(choices=[('urate-lowering therapy', 'Urate-lowering therapy'), ('systemic steroid', 'Systemic steroid'), ('anti-inflammatory', 'Anti-inflammatory'), ('nonsteroidal anti-inflammatory drug', 'Nonsteroidal anti-inflammatory drug'), ('urate extreagogue', 'Urate excretagogue'), ('local steroid', 'Local steroid'), ('recombinant uricase', 'Recombinant uricase'), ('other', 'Other')], default='nonsteroidal anti-inflammatory drug', max_length=50)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical ibuprofen',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalIndomethacin',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('intolerant', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Are you intolerant or should / will not take <django.db.models.fields.CharField>?', verbose_name='Intolerance')),
                ('active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Is this medication active?', verbose_name='Active Status')),
                ('date_started', models.DateField(blank=True, null=True)),
                ('date_ended', models.DateField(blank=True, default=None, null=True)),
                ('prn', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Do you take this medication only as needed (PRN)?', null=True)),
                ('as_prophylaxis', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Is this for flare prophylaxis while initiating ULT?', null=True, verbose_name='Flare prophylaxis?')),
                ('prophylaxis_finished', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=None, help_text='Are you finished with flare prophylaxis?', null=True, verbose_name='Is prophylaxis finished?')),
                ('duration', models.IntegerField(blank=True, default=7, null=True, validators=[django.core.validators.MaxValueValidator(14), django.core.validators.MinValueValidator(1)])),
                ('generic_name', models.CharField(choices=[('allopurinol', 'Allopurinol'), ('febuxostat', 'Febuxostat'), ('indomethacin', 'Indomethacin'), ('prednisone', 'Prednisone'), ('colchicine', 'Colchicine'), ('probenecid', 'Probenecid'), ('pegloticase', 'Pegloticase'), ('ibuprofen', 'Ibuprofen'), ('naproxen', 'Naproxen'), ('meloxicam', 'Meloxicam'), ('celecoxib', 'Celecoxib'), ('methylprednisolone', 'Methylprednisolone'), ('tinctureoftime', 'Tinctureoftime'), ('other', 'Other')], default='indomethacin', max_length=60)),
                ('dose', models.IntegerField(blank=True, choices=[(25, '25 mg'), (50, '50 mg')], null=True)),
                ('freq', models.CharField(blank=True, choices=[('daily', 'Once daily'), ('twice daily', 'Twice daily'), ('three times daily', 'Three times daily'), ('every other week', 'Every 2 weeks'), ('once', 'Once')], default='daily', max_length=50)),
                ('side_effects', models.CharField(blank=True, choices=[('Rash', 'Rash'), ('Kidney failure', 'Kidney failure'), ('Stomach ulcer', 'Stomach ulcer'), ('GI upset', 'GI upset'), ('Medication interaction', 'Medication interaction'), ('None', 'None')], help_text='Have you had any side effects?', max_length=100, null=True)),
                ('drug_class', models.CharField(choices=[('urate-lowering therapy', 'Urate-lowering therapy'), ('systemic steroid', 'Systemic steroid'), ('anti-inflammatory', 'Anti-inflammatory'), ('nonsteroidal anti-inflammatory drug', 'Nonsteroidal anti-inflammatory drug'), ('urate extreagogue', 'Urate excretagogue'), ('local steroid', 'Local steroid'), ('recombinant uricase', 'Recombinant uricase'), ('other', 'Other')], default='nonsteroidal anti-inflammatory drug', max_length=50)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical indomethacin',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMeloxicam',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('intolerant', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Are you intolerant or should / will not take <django.db.models.fields.CharField>?', verbose_name='Intolerance')),
                ('active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Is this medication active?', verbose_name='Active Status')),
                ('date_started', models.DateField(blank=True, null=True)),
                ('date_ended', models.DateField(blank=True, default=None, null=True)),
                ('prn', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Do you take this medication only as needed (PRN)?', null=True)),
                ('as_prophylaxis', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Is this for flare prophylaxis while initiating ULT?', null=True, verbose_name='Flare prophylaxis?')),
                ('prophylaxis_finished', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=None, help_text='Are you finished with flare prophylaxis?', null=True, verbose_name='Is prophylaxis finished?')),
                ('duration', models.IntegerField(blank=True, default=7, null=True, validators=[django.core.validators.MaxValueValidator(14), django.core.validators.MinValueValidator(1)])),
                ('generic_name', models.CharField(choices=[('allopurinol', 'Allopurinol'), ('febuxostat', 'Febuxostat'), ('indomethacin', 'Indomethacin'), ('prednisone', 'Prednisone'), ('colchicine', 'Colchicine'), ('probenecid', 'Probenecid'), ('pegloticase', 'Pegloticase'), ('ibuprofen', 'Ibuprofen'), ('naproxen', 'Naproxen'), ('meloxicam', 'Meloxicam'), ('celecoxib', 'Celecoxib'), ('methylprednisolone', 'Methylprednisolone'), ('tinctureoftime', 'Tinctureoftime'), ('other', 'Other')], default='meloxicam', max_length=60)),
                ('dose', models.DecimalField(blank=True, choices=[(Decimal('7.5'), '7.5 mg'), (Decimal('15'), '15 mg')], decimal_places=1, max_digits=3, null=True)),
                ('freq', models.CharField(blank=True, choices=[('daily', 'Once daily'), ('twice daily', 'Twice daily'), ('three times daily', 'Three times daily'), ('every other week', 'Every 2 weeks'), ('once', 'Once')], default='daily', max_length=50)),
                ('side_effects', models.CharField(blank=True, choices=[('Rash', 'Rash'), ('Kidney failure', 'Kidney failure'), ('Stomach ulcer', 'Stomach ulcer'), ('GI upset', 'GI upset'), ('Medication interaction', 'Medication interaction'), ('None', 'None')], help_text='Have you had any side effects?', max_length=100, null=True)),
                ('drug_class', models.CharField(choices=[('urate-lowering therapy', 'Urate-lowering therapy'), ('systemic steroid', 'Systemic steroid'), ('anti-inflammatory', 'Anti-inflammatory'), ('nonsteroidal anti-inflammatory drug', 'Nonsteroidal anti-inflammatory drug'), ('urate extreagogue', 'Urate excretagogue'), ('local steroid', 'Local steroid'), ('recombinant uricase', 'Recombinant uricase'), ('other', 'Other')], default='nonsteroidal anti-inflammatory drug', max_length=50)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical meloxicam',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMethylprednisolone',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('intolerant', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Are you intolerant or should / will not take <django.db.models.fields.CharField>?', verbose_name='Intolerance')),
                ('active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Is this medication active?', verbose_name='Active Status')),
                ('date_started', models.DateField(blank=True, null=True)),
                ('date_ended', models.DateField(blank=True, default=None, null=True)),
                ('prn', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Do you take this medication only as needed (PRN)?', null=True)),
                ('as_prophylaxis', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Is this for flare prophylaxis while initiating ULT?', null=True, verbose_name='Flare prophylaxis?')),
                ('prophylaxis_finished', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=None, help_text='Are you finished with flare prophylaxis?', null=True, verbose_name='Is prophylaxis finished?')),
                ('duration', models.IntegerField(blank=True, default=7, null=True, validators=[django.core.validators.MaxValueValidator(14), django.core.validators.MinValueValidator(1)])),
                ('generic_name', models.CharField(choices=[('allopurinol', 'Allopurinol'), ('febuxostat', 'Febuxostat'), ('indomethacin', 'Indomethacin'), ('prednisone', 'Prednisone'), ('colchicine', 'Colchicine'), ('probenecid', 'Probenecid'), ('pegloticase', 'Pegloticase'), ('ibuprofen', 'Ibuprofen'), ('naproxen', 'Naproxen'), ('meloxicam', 'Meloxicam'), ('celecoxib', 'Celecoxib'), ('methylprednisolone', 'Methylprednisolone'), ('tinctureoftime', 'Tinctureoftime'), ('other', 'Other')], default='methylprednisolone', max_length=60)),
                ('dose', models.IntegerField(blank=True, choices=[(20, '20 mg'), (40, '40 mg'), (80, '80 mg')], null=True)),
                ('freq', models.CharField(blank=True, choices=[('daily', 'Once daily'), ('twice daily', 'Twice daily'), ('three times daily', 'Three times daily'), ('every other week', 'Every 2 weeks'), ('once', 'Once')], default='daily', max_length=50)),
                ('side_effects', models.CharField(blank=True, choices=[('Bleeding', 'Bleeding'), ('Infection', 'Infection'), ('None', 'None')], help_text='Have you had any side effects?', max_length=100, null=True)),
                ('drug_class', models.CharField(choices=[('urate-lowering therapy', 'Urate-lowering therapy'), ('systemic steroid', 'Systemic steroid'), ('anti-inflammatory', 'Anti-inflammatory'), ('nonsteroidal anti-inflammatory drug', 'Nonsteroidal anti-inflammatory drug'), ('urate extreagogue', 'Urate excretagogue'), ('local steroid', 'Local steroid'), ('recombinant uricase', 'Recombinant uricase'), ('other', 'Other')], default='local steroid', max_length=50)),
                ('as_injection', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Was this given by an injection into your joint?', null=True, verbose_name='Given by joint injection?')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical methylprednisolone',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalNaproxen',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('intolerant', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Are you intolerant or should / will not take <django.db.models.fields.CharField>?', verbose_name='Intolerance')),
                ('active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Is this medication active?', verbose_name='Active Status')),
                ('date_started', models.DateField(blank=True, null=True)),
                ('date_ended', models.DateField(blank=True, default=None, null=True)),
                ('prn', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Do you take this medication only as needed (PRN)?', null=True)),
                ('as_prophylaxis', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Is this for flare prophylaxis while initiating ULT?', null=True, verbose_name='Flare prophylaxis?')),
                ('prophylaxis_finished', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=None, help_text='Are you finished with flare prophylaxis?', null=True, verbose_name='Is prophylaxis finished?')),
                ('duration', models.IntegerField(blank=True, default=7, null=True, validators=[django.core.validators.MaxValueValidator(14), django.core.validators.MinValueValidator(1)])),
                ('generic_name', models.CharField(choices=[('allopurinol', 'Allopurinol'), ('febuxostat', 'Febuxostat'), ('indomethacin', 'Indomethacin'), ('prednisone', 'Prednisone'), ('colchicine', 'Colchicine'), ('probenecid', 'Probenecid'), ('pegloticase', 'Pegloticase'), ('ibuprofen', 'Ibuprofen'), ('naproxen', 'Naproxen'), ('meloxicam', 'Meloxicam'), ('celecoxib', 'Celecoxib'), ('methylprednisolone', 'Methylprednisolone'), ('tinctureoftime', 'Tinctureoftime'), ('other', 'Other')], default='naproxen', max_length=60)),
                ('dose', models.IntegerField(blank=True, choices=[(220, '220 mg'), (250, '250 mg'), (440, '440 mg'), (500, '500 mg')], default=440, null=True)),
                ('freq', models.CharField(blank=True, choices=[('daily', 'Once daily'), ('twice daily', 'Twice daily'), ('three times daily', 'Three times daily'), ('every other week', 'Every 2 weeks'), ('once', 'Once')], default='twice daily', max_length=50, null=True)),
                ('side_effects', models.CharField(blank=True, choices=[('Rash', 'Rash'), ('Kidney failure', 'Kidney failure'), ('Stomach ulcer', 'Stomach ulcer'), ('GI upset', 'GI upset'), ('Medication interaction', 'Medication interaction'), ('None', 'None')], help_text='Have you had any side effects?', max_length=100, null=True)),
                ('drug_class', models.CharField(choices=[('urate-lowering therapy', 'Urate-lowering therapy'), ('systemic steroid', 'Systemic steroid'), ('anti-inflammatory', 'Anti-inflammatory'), ('nonsteroidal anti-inflammatory drug', 'Nonsteroidal anti-inflammatory drug'), ('urate extreagogue', 'Urate excretagogue'), ('local steroid', 'Local steroid'), ('recombinant uricase', 'Recombinant uricase'), ('other', 'Other')], default='nonsteroidal anti-inflammatory drug', max_length=50)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical naproxen',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalOthertreat',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('intolerant', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Are you intolerant or should / will not take <django.db.models.fields.CharField>?', verbose_name='Intolerance')),
                ('active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Is this medication active?', verbose_name='Active Status')),
                ('date_started', models.DateField(blank=True, null=True)),
                ('date_ended', models.DateField(blank=True, default=None, null=True)),
                ('prn', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Do you take this medication only as needed (PRN)?', null=True)),
                ('as_prophylaxis', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Is this for flare prophylaxis while initiating ULT?', null=True, verbose_name='Flare prophylaxis?')),
                ('prophylaxis_finished', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=None, help_text='Are you finished with flare prophylaxis?', null=True, verbose_name='Is prophylaxis finished?')),
                ('duration', models.IntegerField(blank=True, default=7, null=True, validators=[django.core.validators.MaxValueValidator(14), django.core.validators.MinValueValidator(1)])),
                ('generic_name', models.CharField(choices=[('allopurinol', 'Allopurinol'), ('febuxostat', 'Febuxostat'), ('indomethacin', 'Indomethacin'), ('prednisone', 'Prednisone'), ('colchicine', 'Colchicine'), ('probenecid', 'Probenecid'), ('pegloticase', 'Pegloticase'), ('ibuprofen', 'Ibuprofen'), ('naproxen', 'Naproxen'), ('meloxicam', 'Meloxicam'), ('celecoxib', 'Celecoxib'), ('methylprednisolone', 'Methylprednisolone'), ('tinctureoftime', 'Tinctureoftime'), ('other', 'Other')], default='other', max_length=60)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=300, null=True)),
                ('dose', models.IntegerField(blank=True, help_text='Any optional information on your dose?', null=True)),
                ('freq', models.CharField(blank=True, choices=[('daily', 'Once daily'), ('twice daily', 'Twice daily'), ('three times daily', 'Three times daily'), ('every other week', 'Every 2 weeks'), ('once', 'Once')], default='daily', help_text='Any optional information on your frequency?', max_length=50, null=True)),
                ('side_effects', models.CharField(blank=True, help_text='Have you had any side effects? Please list', max_length=400, null=True)),
                ('drug_class', models.CharField(choices=[('urate-lowering therapy', 'Urate-lowering therapy'), ('systemic steroid', 'Systemic steroid'), ('anti-inflammatory', 'Anti-inflammatory'), ('nonsteroidal anti-inflammatory drug', 'Nonsteroidal anti-inflammatory drug'), ('urate extreagogue', 'Urate excretagogue'), ('local steroid', 'Local steroid'), ('recombinant uricase', 'Recombinant uricase'), ('other', 'Other')], default='other', max_length=50)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical othertreat',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPrednisone',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('intolerant', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Are you intolerant or should / will not take <django.db.models.fields.CharField>?', verbose_name='Intolerance')),
                ('active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Is this medication active?', verbose_name='Active Status')),
                ('date_started', models.DateField(blank=True, null=True)),
                ('date_ended', models.DateField(blank=True, default=None, null=True)),
                ('prn', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Do you take this medication only as needed (PRN)?', null=True)),
                ('as_prophylaxis', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Is this for flare prophylaxis while initiating ULT?', null=True, verbose_name='Flare prophylaxis?')),
                ('prophylaxis_finished', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=None, help_text='Are you finished with flare prophylaxis?', null=True, verbose_name='Is prophylaxis finished?')),
                ('generic_name', models.CharField(choices=[('allopurinol', 'Allopurinol'), ('febuxostat', 'Febuxostat'), ('indomethacin', 'Indomethacin'), ('prednisone', 'Prednisone'), ('colchicine', 'Colchicine'), ('probenecid', 'Probenecid'), ('pegloticase', 'Pegloticase'), ('ibuprofen', 'Ibuprofen'), ('naproxen', 'Naproxen'), ('meloxicam', 'Meloxicam'), ('celecoxib', 'Celecoxib'), ('methylprednisolone', 'Methylprednisolone'), ('tinctureoftime', 'Tinctureoftime'), ('other', 'Other')], default='prednisone', max_length=60)),
                ('dose', models.IntegerField(blank=True, choices=[(5, '5 mg'), (10, '10 mg'), (15, '15 mg'), (20, '20 mg'), (30, '30 mg'), (40, '40 mg'), (60, '60 mg')], default=40, null=True)),
                ('freq', models.CharField(blank=True, choices=[('daily', 'Once daily'), ('twice daily', 'Twice daily'), ('three times daily', 'Three times daily'), ('every other week', 'Every 2 weeks'), ('once', 'Once')], default='daily', max_length=50, null=True)),
                ('duration', models.IntegerField(blank=True, default=4, null=True, validators=[django.core.validators.MaxValueValidator(14), django.core.validators.MinValueValidator(1)])),
                ('dose2', models.IntegerField(blank=True, choices=[(5, '5 mg'), (10, '10 mg'), (15, '15 mg'), (20, '20 mg'), (30, '30 mg'), (40, '40 mg'), (60, '60 mg')], default=20, null=True)),
                ('freq2', models.CharField(blank=True, choices=[('daily', 'Once daily'), ('twice daily', 'Twice daily'), ('three times daily', 'Three times daily'), ('every other week', 'Every 2 weeks'), ('once', 'Once')], default='daily', max_length=50, null=True)),
                ('duration2', models.IntegerField(blank=True, default=4, null=True, validators=[django.core.validators.MaxValueValidator(14), django.core.validators.MinValueValidator(1)])),
                ('side_effects', models.CharField(blank=True, choices=[('Insomnia', 'Insomnia'), ('Weight gain', 'Weight gain'), ('Anxiety', 'Anxiety'), ('Hyperglycemia', 'Hyperglycemia'), ('Weakness', 'Weakness'), ('Easy bruising', 'Easy bruising'), ('Osteoporosis', 'Osteoporosis'), ('Cataract', 'Cataract'), ('Infection', 'Infection'), ('None', 'None')], help_text='Have you had any side effects?', max_length=100, null=True)),
                ('drug_class', models.CharField(choices=[('urate-lowering therapy', 'Urate-lowering therapy'), ('systemic steroid', 'Systemic steroid'), ('anti-inflammatory', 'Anti-inflammatory'), ('nonsteroidal anti-inflammatory drug', 'Nonsteroidal anti-inflammatory drug'), ('urate extreagogue', 'Urate excretagogue'), ('local steroid', 'Local steroid'), ('recombinant uricase', 'Recombinant uricase'), ('other', 'Other')], default='systemic steroid', max_length=50)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical prednisone',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProbenecid',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('intolerant', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Are you intolerant or should / will not take <django.db.models.fields.CharField>?', verbose_name='Intolerance')),
                ('active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Is this medication active?', verbose_name='Active Status')),
                ('date_ended', models.DateField(blank=True, default=None, null=True)),
                ('date_started', models.DateField(blank=True, default=django.utils.timezone.now, null=True)),
                ('generic_name', models.CharField(choices=[('allopurinol', 'Allopurinol'), ('febuxostat', 'Febuxostat'), ('indomethacin', 'Indomethacin'), ('prednisone', 'Prednisone'), ('colchicine', 'Colchicine'), ('probenecid', 'Probenecid'), ('pegloticase', 'Pegloticase'), ('ibuprofen', 'Ibuprofen'), ('naproxen', 'Naproxen'), ('meloxicam', 'Meloxicam'), ('celecoxib', 'Celecoxib'), ('methylprednisolone', 'Methylprednisolone'), ('tinctureoftime', 'Tinctureoftime'), ('other', 'Other')], default='probenecid', max_length=60)),
                ('dose', models.IntegerField(choices=[(250, '250 mg'), (500, '500 mg'), (750, '750 mg'), (1000, '1000 mg')], validators=[django.core.validators.MaxValueValidator(1000), django.core.validators.MinValueValidator(250)])),
                ('freq', models.CharField(choices=[('daily', 'Once daily'), ('twice daily', 'Twice daily'), ('three times daily', 'Three times daily'), ('every other week', 'Every 2 weeks'), ('once', 'Once')], default='twice daily', max_length=50)),
                ('side_effects', models.CharField(blank=True, choices=[('Flushing', 'Flushing'), ('Headache', 'Headache'), ('None', 'None')], help_text='Have you had any side effects?', max_length=100, null=True)),
                ('drug_class', models.CharField(choices=[('urate-lowering therapy', 'Urate-lowering therapy'), ('systemic steroid', 'Systemic steroid'), ('anti-inflammatory', 'Anti-inflammatory'), ('nonsteroidal anti-inflammatory drug', 'Nonsteroidal anti-inflammatory drug'), ('urate extreagogue', 'Urate excretagogue'), ('local steroid', 'Local steroid'), ('recombinant uricase', 'Recombinant uricase'), ('other', 'Other')], default='urate extreagogue', max_length=50)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical probenecid',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTinctureoftime',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('intolerant', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Are you intolerant or should / will not take <django.db.models.fields.CharField>?', verbose_name='Intolerance')),
                ('active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Is this medication active?', verbose_name='Active Status')),
                ('date_started', models.DateField(blank=True, null=True)),
                ('date_ended', models.DateField(blank=True, default=None, null=True)),
                ('prn', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Do you take this medication only as needed (PRN)?', null=True)),
                ('as_prophylaxis', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Is this for flare prophylaxis while initiating ULT?', null=True, verbose_name='Flare prophylaxis?')),
                ('prophylaxis_finished', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=None, help_text='Are you finished with flare prophylaxis?', null=True, verbose_name='Is prophylaxis finished?')),
                ('generic_name', models.CharField(choices=[('allopurinol', 'Allopurinol'), ('febuxostat', 'Febuxostat'), ('indomethacin', 'Indomethacin'), ('prednisone', 'Prednisone'), ('colchicine', 'Colchicine'), ('probenecid', 'Probenecid'), ('pegloticase', 'Pegloticase'), ('ibuprofen', 'Ibuprofen'), ('naproxen', 'Naproxen'), ('meloxicam', 'Meloxicam'), ('celecoxib', 'Celecoxib'), ('methylprednisolone', 'Methylprednisolone'), ('tinctureoftime', 'Tinctureoftime'), ('other', 'Other')], default='tinctureoftime', max_length=60)),
                ('duration', models.IntegerField(blank=True, help_text='How long did it take to get better?', null=True)),
                ('dose', models.IntegerField(blank=True, help_text='Any optional information on your dose?', null=True)),
                ('freq', models.CharField(blank=True, choices=[('daily', 'Once daily'), ('twice daily', 'Twice daily'), ('three times daily', 'Three times daily'), ('every other week', 'Every 2 weeks'), ('once', 'Once')], default='daily', help_text='Any optional information on your frequency?', max_length=50, null=True)),
                ('side_effects', models.CharField(blank=True, help_text='Have you had any side effects? Please list', max_length=400, null=True)),
                ('drug_class', models.CharField(choices=[('urate-lowering therapy', 'Urate-lowering therapy'), ('systemic steroid', 'Systemic steroid'), ('anti-inflammatory', 'Anti-inflammatory'), ('nonsteroidal anti-inflammatory drug', 'Nonsteroidal anti-inflammatory drug'), ('urate extreagogue', 'Urate excretagogue'), ('local steroid', 'Local steroid'), ('recombinant uricase', 'Recombinant uricase'), ('other', 'Other')], default='tinctureoftime', max_length=50)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical tinctureoftime',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Ibuprofen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('intolerant', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Are you intolerant or should / will not take <django.db.models.fields.CharField>?', verbose_name='Intolerance')),
                ('active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Is this medication active?', verbose_name='Active Status')),
                ('date_started', models.DateField(blank=True, null=True)),
                ('date_ended', models.DateField(blank=True, default=None, null=True)),
                ('prn', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Do you take this medication only as needed (PRN)?', null=True)),
                ('as_prophylaxis', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Is this for flare prophylaxis while initiating ULT?', null=True, verbose_name='Flare prophylaxis?')),
                ('prophylaxis_finished', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=None, help_text='Are you finished with flare prophylaxis?', null=True, verbose_name='Is prophylaxis finished?')),
                ('duration', models.IntegerField(blank=True, default=7, null=True, validators=[django.core.validators.MaxValueValidator(14), django.core.validators.MinValueValidator(1)])),
                ('generic_name', models.CharField(choices=[('allopurinol', 'Allopurinol'), ('febuxostat', 'Febuxostat'), ('indomethacin', 'Indomethacin'), ('prednisone', 'Prednisone'), ('colchicine', 'Colchicine'), ('probenecid', 'Probenecid'), ('pegloticase', 'Pegloticase'), ('ibuprofen', 'Ibuprofen'), ('naproxen', 'Naproxen'), ('meloxicam', 'Meloxicam'), ('celecoxib', 'Celecoxib'), ('methylprednisolone', 'Methylprednisolone'), ('tinctureoftime', 'Tinctureoftime'), ('other', 'Other')], default='ibuprofen', max_length=60)),
                ('dose', models.IntegerField(blank=True, choices=[(200, '200 mg'), (400, '400 mg'), (600, '600 mg'), (800, '800 mg')], default=800, null=True)),
                ('freq', models.CharField(blank=True, choices=[('daily', 'Once daily'), ('twice daily', 'Twice daily'), ('three times daily', 'Three times daily'), ('every other week', 'Every 2 weeks'), ('once', 'Once')], default='three times daily', max_length=50, null=True)),
                ('side_effects', models.CharField(blank=True, choices=[('Rash', 'Rash'), ('Kidney failure', 'Kidney failure'), ('Stomach ulcer', 'Stomach ulcer'), ('GI upset', 'GI upset'), ('Medication interaction', 'Medication interaction'), ('None', 'None')], help_text='Have you had any side effects?', max_length=100, null=True)),
                ('drug_class', models.CharField(choices=[('urate-lowering therapy', 'Urate-lowering therapy'), ('systemic steroid', 'Systemic steroid'), ('anti-inflammatory', 'Anti-inflammatory'), ('nonsteroidal anti-inflammatory drug', 'Nonsteroidal anti-inflammatory drug'), ('urate extreagogue', 'Urate excretagogue'), ('local steroid', 'Local steroid'), ('recombinant uricase', 'Recombinant uricase'), ('other', 'Other')], default='nonsteroidal anti-inflammatory drug', max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Indomethacin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('intolerant', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Are you intolerant or should / will not take <django.db.models.fields.CharField>?', verbose_name='Intolerance')),
                ('active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Is this medication active?', verbose_name='Active Status')),
                ('date_started', models.DateField(blank=True, null=True)),
                ('date_ended', models.DateField(blank=True, default=None, null=True)),
                ('prn', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Do you take this medication only as needed (PRN)?', null=True)),
                ('as_prophylaxis', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Is this for flare prophylaxis while initiating ULT?', null=True, verbose_name='Flare prophylaxis?')),
                ('prophylaxis_finished', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=None, help_text='Are you finished with flare prophylaxis?', null=True, verbose_name='Is prophylaxis finished?')),
                ('duration', models.IntegerField(blank=True, default=7, null=True, validators=[django.core.validators.MaxValueValidator(14), django.core.validators.MinValueValidator(1)])),
                ('generic_name', models.CharField(choices=[('allopurinol', 'Allopurinol'), ('febuxostat', 'Febuxostat'), ('indomethacin', 'Indomethacin'), ('prednisone', 'Prednisone'), ('colchicine', 'Colchicine'), ('probenecid', 'Probenecid'), ('pegloticase', 'Pegloticase'), ('ibuprofen', 'Ibuprofen'), ('naproxen', 'Naproxen'), ('meloxicam', 'Meloxicam'), ('celecoxib', 'Celecoxib'), ('methylprednisolone', 'Methylprednisolone'), ('tinctureoftime', 'Tinctureoftime'), ('other', 'Other')], default='indomethacin', max_length=60)),
                ('dose', models.IntegerField(blank=True, choices=[(25, '25 mg'), (50, '50 mg')], null=True)),
                ('freq', models.CharField(blank=True, choices=[('daily', 'Once daily'), ('twice daily', 'Twice daily'), ('three times daily', 'Three times daily'), ('every other week', 'Every 2 weeks'), ('once', 'Once')], default='daily', max_length=50)),
                ('side_effects', models.CharField(blank=True, choices=[('Rash', 'Rash'), ('Kidney failure', 'Kidney failure'), ('Stomach ulcer', 'Stomach ulcer'), ('GI upset', 'GI upset'), ('Medication interaction', 'Medication interaction'), ('None', 'None')], help_text='Have you had any side effects?', max_length=100, null=True)),
                ('drug_class', models.CharField(choices=[('urate-lowering therapy', 'Urate-lowering therapy'), ('systemic steroid', 'Systemic steroid'), ('anti-inflammatory', 'Anti-inflammatory'), ('nonsteroidal anti-inflammatory drug', 'Nonsteroidal anti-inflammatory drug'), ('urate extreagogue', 'Urate excretagogue'), ('local steroid', 'Local steroid'), ('recombinant uricase', 'Recombinant uricase'), ('other', 'Other')], default='nonsteroidal anti-inflammatory drug', max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Meloxicam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('intolerant', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Are you intolerant or should / will not take <django.db.models.fields.CharField>?', verbose_name='Intolerance')),
                ('active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Is this medication active?', verbose_name='Active Status')),
                ('date_started', models.DateField(blank=True, null=True)),
                ('date_ended', models.DateField(blank=True, default=None, null=True)),
                ('prn', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Do you take this medication only as needed (PRN)?', null=True)),
                ('as_prophylaxis', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Is this for flare prophylaxis while initiating ULT?', null=True, verbose_name='Flare prophylaxis?')),
                ('prophylaxis_finished', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=None, help_text='Are you finished with flare prophylaxis?', null=True, verbose_name='Is prophylaxis finished?')),
                ('duration', models.IntegerField(blank=True, default=7, null=True, validators=[django.core.validators.MaxValueValidator(14), django.core.validators.MinValueValidator(1)])),
                ('generic_name', models.CharField(choices=[('allopurinol', 'Allopurinol'), ('febuxostat', 'Febuxostat'), ('indomethacin', 'Indomethacin'), ('prednisone', 'Prednisone'), ('colchicine', 'Colchicine'), ('probenecid', 'Probenecid'), ('pegloticase', 'Pegloticase'), ('ibuprofen', 'Ibuprofen'), ('naproxen', 'Naproxen'), ('meloxicam', 'Meloxicam'), ('celecoxib', 'Celecoxib'), ('methylprednisolone', 'Methylprednisolone'), ('tinctureoftime', 'Tinctureoftime'), ('other', 'Other')], default='meloxicam', max_length=60)),
                ('dose', models.DecimalField(blank=True, choices=[(Decimal('7.5'), '7.5 mg'), (Decimal('15'), '15 mg')], decimal_places=1, max_digits=3, null=True)),
                ('freq', models.CharField(blank=True, choices=[('daily', 'Once daily'), ('twice daily', 'Twice daily'), ('three times daily', 'Three times daily'), ('every other week', 'Every 2 weeks'), ('once', 'Once')], default='daily', max_length=50)),
                ('side_effects', models.CharField(blank=True, choices=[('Rash', 'Rash'), ('Kidney failure', 'Kidney failure'), ('Stomach ulcer', 'Stomach ulcer'), ('GI upset', 'GI upset'), ('Medication interaction', 'Medication interaction'), ('None', 'None')], help_text='Have you had any side effects?', max_length=100, null=True)),
                ('drug_class', models.CharField(choices=[('urate-lowering therapy', 'Urate-lowering therapy'), ('systemic steroid', 'Systemic steroid'), ('anti-inflammatory', 'Anti-inflammatory'), ('nonsteroidal anti-inflammatory drug', 'Nonsteroidal anti-inflammatory drug'), ('urate extreagogue', 'Urate excretagogue'), ('local steroid', 'Local steroid'), ('recombinant uricase', 'Recombinant uricase'), ('other', 'Other')], default='nonsteroidal anti-inflammatory drug', max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Methylprednisolone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('intolerant', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Are you intolerant or should / will not take <django.db.models.fields.CharField>?', verbose_name='Intolerance')),
                ('active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Is this medication active?', verbose_name='Active Status')),
                ('date_started', models.DateField(blank=True, null=True)),
                ('date_ended', models.DateField(blank=True, default=None, null=True)),
                ('prn', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Do you take this medication only as needed (PRN)?', null=True)),
                ('as_prophylaxis', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Is this for flare prophylaxis while initiating ULT?', null=True, verbose_name='Flare prophylaxis?')),
                ('prophylaxis_finished', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=None, help_text='Are you finished with flare prophylaxis?', null=True, verbose_name='Is prophylaxis finished?')),
                ('duration', models.IntegerField(blank=True, default=7, null=True, validators=[django.core.validators.MaxValueValidator(14), django.core.validators.MinValueValidator(1)])),
                ('generic_name', models.CharField(choices=[('allopurinol', 'Allopurinol'), ('febuxostat', 'Febuxostat'), ('indomethacin', 'Indomethacin'), ('prednisone', 'Prednisone'), ('colchicine', 'Colchicine'), ('probenecid', 'Probenecid'), ('pegloticase', 'Pegloticase'), ('ibuprofen', 'Ibuprofen'), ('naproxen', 'Naproxen'), ('meloxicam', 'Meloxicam'), ('celecoxib', 'Celecoxib'), ('methylprednisolone', 'Methylprednisolone'), ('tinctureoftime', 'Tinctureoftime'), ('other', 'Other')], default='methylprednisolone', max_length=60)),
                ('dose', models.IntegerField(blank=True, choices=[(20, '20 mg'), (40, '40 mg'), (80, '80 mg')], null=True)),
                ('freq', models.CharField(blank=True, choices=[('daily', 'Once daily'), ('twice daily', 'Twice daily'), ('three times daily', 'Three times daily'), ('every other week', 'Every 2 weeks'), ('once', 'Once')], default='daily', max_length=50)),
                ('side_effects', models.CharField(blank=True, choices=[('Bleeding', 'Bleeding'), ('Infection', 'Infection'), ('None', 'None')], help_text='Have you had any side effects?', max_length=100, null=True)),
                ('drug_class', models.CharField(choices=[('urate-lowering therapy', 'Urate-lowering therapy'), ('systemic steroid', 'Systemic steroid'), ('anti-inflammatory', 'Anti-inflammatory'), ('nonsteroidal anti-inflammatory drug', 'Nonsteroidal anti-inflammatory drug'), ('urate extreagogue', 'Urate excretagogue'), ('local steroid', 'Local steroid'), ('recombinant uricase', 'Recombinant uricase'), ('other', 'Other')], default='local steroid', max_length=50)),
                ('as_injection', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Was this given by an injection into your joint?', null=True, verbose_name='Given by joint injection?')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Naproxen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('intolerant', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Are you intolerant or should / will not take <django.db.models.fields.CharField>?', verbose_name='Intolerance')),
                ('active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Is this medication active?', verbose_name='Active Status')),
                ('date_started', models.DateField(blank=True, null=True)),
                ('date_ended', models.DateField(blank=True, default=None, null=True)),
                ('prn', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Do you take this medication only as needed (PRN)?', null=True)),
                ('as_prophylaxis', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Is this for flare prophylaxis while initiating ULT?', null=True, verbose_name='Flare prophylaxis?')),
                ('prophylaxis_finished', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=None, help_text='Are you finished with flare prophylaxis?', null=True, verbose_name='Is prophylaxis finished?')),
                ('duration', models.IntegerField(blank=True, default=7, null=True, validators=[django.core.validators.MaxValueValidator(14), django.core.validators.MinValueValidator(1)])),
                ('generic_name', models.CharField(choices=[('allopurinol', 'Allopurinol'), ('febuxostat', 'Febuxostat'), ('indomethacin', 'Indomethacin'), ('prednisone', 'Prednisone'), ('colchicine', 'Colchicine'), ('probenecid', 'Probenecid'), ('pegloticase', 'Pegloticase'), ('ibuprofen', 'Ibuprofen'), ('naproxen', 'Naproxen'), ('meloxicam', 'Meloxicam'), ('celecoxib', 'Celecoxib'), ('methylprednisolone', 'Methylprednisolone'), ('tinctureoftime', 'Tinctureoftime'), ('other', 'Other')], default='naproxen', max_length=60)),
                ('dose', models.IntegerField(blank=True, choices=[(220, '220 mg'), (250, '250 mg'), (440, '440 mg'), (500, '500 mg')], default=440, null=True)),
                ('freq', models.CharField(blank=True, choices=[('daily', 'Once daily'), ('twice daily', 'Twice daily'), ('three times daily', 'Three times daily'), ('every other week', 'Every 2 weeks'), ('once', 'Once')], default='twice daily', max_length=50, null=True)),
                ('side_effects', models.CharField(blank=True, choices=[('Rash', 'Rash'), ('Kidney failure', 'Kidney failure'), ('Stomach ulcer', 'Stomach ulcer'), ('GI upset', 'GI upset'), ('Medication interaction', 'Medication interaction'), ('None', 'None')], help_text='Have you had any side effects?', max_length=100, null=True)),
                ('drug_class', models.CharField(choices=[('urate-lowering therapy', 'Urate-lowering therapy'), ('systemic steroid', 'Systemic steroid'), ('anti-inflammatory', 'Anti-inflammatory'), ('nonsteroidal anti-inflammatory drug', 'Nonsteroidal anti-inflammatory drug'), ('urate extreagogue', 'Urate excretagogue'), ('local steroid', 'Local steroid'), ('recombinant uricase', 'Recombinant uricase'), ('other', 'Other')], default='nonsteroidal anti-inflammatory drug', max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Othertreat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('intolerant', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Are you intolerant or should / will not take <django.db.models.fields.CharField>?', verbose_name='Intolerance')),
                ('active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Is this medication active?', verbose_name='Active Status')),
                ('date_started', models.DateField(blank=True, null=True)),
                ('date_ended', models.DateField(blank=True, default=None, null=True)),
                ('prn', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Do you take this medication only as needed (PRN)?', null=True)),
                ('as_prophylaxis', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Is this for flare prophylaxis while initiating ULT?', null=True, verbose_name='Flare prophylaxis?')),
                ('prophylaxis_finished', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=None, help_text='Are you finished with flare prophylaxis?', null=True, verbose_name='Is prophylaxis finished?')),
                ('duration', models.IntegerField(blank=True, default=7, null=True, validators=[django.core.validators.MaxValueValidator(14), django.core.validators.MinValueValidator(1)])),
                ('generic_name', models.CharField(choices=[('allopurinol', 'Allopurinol'), ('febuxostat', 'Febuxostat'), ('indomethacin', 'Indomethacin'), ('prednisone', 'Prednisone'), ('colchicine', 'Colchicine'), ('probenecid', 'Probenecid'), ('pegloticase', 'Pegloticase'), ('ibuprofen', 'Ibuprofen'), ('naproxen', 'Naproxen'), ('meloxicam', 'Meloxicam'), ('celecoxib', 'Celecoxib'), ('methylprednisolone', 'Methylprednisolone'), ('tinctureoftime', 'Tinctureoftime'), ('other', 'Other')], default='other', max_length=60)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=300, null=True)),
                ('dose', models.IntegerField(blank=True, help_text='Any optional information on your dose?', null=True)),
                ('freq', models.CharField(blank=True, choices=[('daily', 'Once daily'), ('twice daily', 'Twice daily'), ('three times daily', 'Three times daily'), ('every other week', 'Every 2 weeks'), ('once', 'Once')], default='daily', help_text='Any optional information on your frequency?', max_length=50, null=True)),
                ('side_effects', models.CharField(blank=True, help_text='Have you had any side effects? Please list', max_length=400, null=True)),
                ('drug_class', models.CharField(choices=[('urate-lowering therapy', 'Urate-lowering therapy'), ('systemic steroid', 'Systemic steroid'), ('anti-inflammatory', 'Anti-inflammatory'), ('nonsteroidal anti-inflammatory drug', 'Nonsteroidal anti-inflammatory drug'), ('urate extreagogue', 'Urate excretagogue'), ('local steroid', 'Local steroid'), ('recombinant uricase', 'Recombinant uricase'), ('other', 'Other')], default='other', max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Prednisone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('intolerant', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Are you intolerant or should / will not take <django.db.models.fields.CharField>?', verbose_name='Intolerance')),
                ('active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Is this medication active?', verbose_name='Active Status')),
                ('date_started', models.DateField(blank=True, null=True)),
                ('date_ended', models.DateField(blank=True, default=None, null=True)),
                ('prn', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Do you take this medication only as needed (PRN)?', null=True)),
                ('as_prophylaxis', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Is this for flare prophylaxis while initiating ULT?', null=True, verbose_name='Flare prophylaxis?')),
                ('prophylaxis_finished', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=None, help_text='Are you finished with flare prophylaxis?', null=True, verbose_name='Is prophylaxis finished?')),
                ('generic_name', models.CharField(choices=[('allopurinol', 'Allopurinol'), ('febuxostat', 'Febuxostat'), ('indomethacin', 'Indomethacin'), ('prednisone', 'Prednisone'), ('colchicine', 'Colchicine'), ('probenecid', 'Probenecid'), ('pegloticase', 'Pegloticase'), ('ibuprofen', 'Ibuprofen'), ('naproxen', 'Naproxen'), ('meloxicam', 'Meloxicam'), ('celecoxib', 'Celecoxib'), ('methylprednisolone', 'Methylprednisolone'), ('tinctureoftime', 'Tinctureoftime'), ('other', 'Other')], default='prednisone', max_length=60)),
                ('dose', models.IntegerField(blank=True, choices=[(5, '5 mg'), (10, '10 mg'), (15, '15 mg'), (20, '20 mg'), (30, '30 mg'), (40, '40 mg'), (60, '60 mg')], default=40, null=True)),
                ('freq', models.CharField(blank=True, choices=[('daily', 'Once daily'), ('twice daily', 'Twice daily'), ('three times daily', 'Three times daily'), ('every other week', 'Every 2 weeks'), ('once', 'Once')], default='daily', max_length=50, null=True)),
                ('duration', models.IntegerField(blank=True, default=4, null=True, validators=[django.core.validators.MaxValueValidator(14), django.core.validators.MinValueValidator(1)])),
                ('dose2', models.IntegerField(blank=True, choices=[(5, '5 mg'), (10, '10 mg'), (15, '15 mg'), (20, '20 mg'), (30, '30 mg'), (40, '40 mg'), (60, '60 mg')], default=20, null=True)),
                ('freq2', models.CharField(blank=True, choices=[('daily', 'Once daily'), ('twice daily', 'Twice daily'), ('three times daily', 'Three times daily'), ('every other week', 'Every 2 weeks'), ('once', 'Once')], default='daily', max_length=50, null=True)),
                ('duration2', models.IntegerField(blank=True, default=4, null=True, validators=[django.core.validators.MaxValueValidator(14), django.core.validators.MinValueValidator(1)])),
                ('side_effects', models.CharField(blank=True, choices=[('Insomnia', 'Insomnia'), ('Weight gain', 'Weight gain'), ('Anxiety', 'Anxiety'), ('Hyperglycemia', 'Hyperglycemia'), ('Weakness', 'Weakness'), ('Easy bruising', 'Easy bruising'), ('Osteoporosis', 'Osteoporosis'), ('Cataract', 'Cataract'), ('Infection', 'Infection'), ('None', 'None')], help_text='Have you had any side effects?', max_length=100, null=True)),
                ('drug_class', models.CharField(choices=[('urate-lowering therapy', 'Urate-lowering therapy'), ('systemic steroid', 'Systemic steroid'), ('anti-inflammatory', 'Anti-inflammatory'), ('nonsteroidal anti-inflammatory drug', 'Nonsteroidal anti-inflammatory drug'), ('urate extreagogue', 'Urate excretagogue'), ('local steroid', 'Local steroid'), ('recombinant uricase', 'Recombinant uricase'), ('other', 'Other')], default='systemic steroid', max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Probenecid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('intolerant', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Are you intolerant or should / will not take <django.db.models.fields.CharField>?', verbose_name='Intolerance')),
                ('active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Is this medication active?', verbose_name='Active Status')),
                ('date_ended', models.DateField(blank=True, default=None, null=True)),
                ('date_started', models.DateField(blank=True, default=django.utils.timezone.now, null=True)),
                ('generic_name', models.CharField(choices=[('allopurinol', 'Allopurinol'), ('febuxostat', 'Febuxostat'), ('indomethacin', 'Indomethacin'), ('prednisone', 'Prednisone'), ('colchicine', 'Colchicine'), ('probenecid', 'Probenecid'), ('pegloticase', 'Pegloticase'), ('ibuprofen', 'Ibuprofen'), ('naproxen', 'Naproxen'), ('meloxicam', 'Meloxicam'), ('celecoxib', 'Celecoxib'), ('methylprednisolone', 'Methylprednisolone'), ('tinctureoftime', 'Tinctureoftime'), ('other', 'Other')], default='probenecid', max_length=60)),
                ('dose', models.IntegerField(choices=[(250, '250 mg'), (500, '500 mg'), (750, '750 mg'), (1000, '1000 mg')], validators=[django.core.validators.MaxValueValidator(1000), django.core.validators.MinValueValidator(250)])),
                ('freq', models.CharField(choices=[('daily', 'Once daily'), ('twice daily', 'Twice daily'), ('three times daily', 'Three times daily'), ('every other week', 'Every 2 weeks'), ('once', 'Once')], default='twice daily', max_length=50)),
                ('side_effects', models.CharField(blank=True, choices=[('Flushing', 'Flushing'), ('Headache', 'Headache'), ('None', 'None')], help_text='Have you had any side effects?', max_length=100, null=True)),
                ('drug_class', models.CharField(choices=[('urate-lowering therapy', 'Urate-lowering therapy'), ('systemic steroid', 'Systemic steroid'), ('anti-inflammatory', 'Anti-inflammatory'), ('nonsteroidal anti-inflammatory drug', 'Nonsteroidal anti-inflammatory drug'), ('urate extreagogue', 'Urate excretagogue'), ('local steroid', 'Local steroid'), ('recombinant uricase', 'Recombinant uricase'), ('other', 'Other')], default='urate extreagogue', max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tinctureoftime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('intolerant', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Are you intolerant or should / will not take <django.db.models.fields.CharField>?', verbose_name='Intolerance')),
                ('active', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Is this medication active?', verbose_name='Active Status')),
                ('date_started', models.DateField(blank=True, null=True)),
                ('date_ended', models.DateField(blank=True, default=None, null=True)),
                ('prn', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Do you take this medication only as needed (PRN)?', null=True)),
                ('as_prophylaxis', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Is this for flare prophylaxis while initiating ULT?', null=True, verbose_name='Flare prophylaxis?')),
                ('prophylaxis_finished', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=None, help_text='Are you finished with flare prophylaxis?', null=True, verbose_name='Is prophylaxis finished?')),
                ('generic_name', models.CharField(choices=[('allopurinol', 'Allopurinol'), ('febuxostat', 'Febuxostat'), ('indomethacin', 'Indomethacin'), ('prednisone', 'Prednisone'), ('colchicine', 'Colchicine'), ('probenecid', 'Probenecid'), ('pegloticase', 'Pegloticase'), ('ibuprofen', 'Ibuprofen'), ('naproxen', 'Naproxen'), ('meloxicam', 'Meloxicam'), ('celecoxib', 'Celecoxib'), ('methylprednisolone', 'Methylprednisolone'), ('tinctureoftime', 'Tinctureoftime'), ('other', 'Other')], default='tinctureoftime', max_length=60)),
                ('duration', models.IntegerField(blank=True, help_text='How long did it take to get better?', null=True)),
                ('dose', models.IntegerField(blank=True, help_text='Any optional information on your dose?', null=True)),
                ('freq', models.CharField(blank=True, choices=[('daily', 'Once daily'), ('twice daily', 'Twice daily'), ('three times daily', 'Three times daily'), ('every other week', 'Every 2 weeks'), ('once', 'Once')], default='daily', help_text='Any optional information on your frequency?', max_length=50, null=True)),
                ('side_effects', models.CharField(blank=True, help_text='Have you had any side effects? Please list', max_length=400, null=True)),
                ('drug_class', models.CharField(choices=[('urate-lowering therapy', 'Urate-lowering therapy'), ('systemic steroid', 'Systemic steroid'), ('anti-inflammatory', 'Anti-inflammatory'), ('nonsteroidal anti-inflammatory drug', 'Nonsteroidal anti-inflammatory drug'), ('urate extreagogue', 'Urate excretagogue'), ('local steroid', 'Local steroid'), ('recombinant uricase', 'Recombinant uricase'), ('other', 'Other')], default='tinctureoftime', max_length=50)),
                ('flareaid', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='flareaid.flareaid')),
                ('ppxaid', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='ppxaid.ppxaid')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
