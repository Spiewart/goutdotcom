# Generated by Django 3.1.7 on 2021-12-15 03:00

import datetime
from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('treatment', '0001_initial'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='celecoxib',
            name='date_ended',
        ),
        migrations.RemoveField(
            model_name='celecoxib',
            name='date_started',
        ),
        migrations.RemoveField(
            model_name='colchicine',
            name='date_ended',
        ),
        migrations.RemoveField(
            model_name='colchicine',
            name='date_started',
        ),
        migrations.RemoveField(
            model_name='ibuprofen',
            name='date_ended',
        ),
        migrations.RemoveField(
            model_name='ibuprofen',
            name='date_started',
        ),
        migrations.RemoveField(
            model_name='meloxicam',
            name='date_ended',
        ),
        migrations.RemoveField(
            model_name='meloxicam',
            name='date_started',
        ),
        migrations.RemoveField(
            model_name='methylprednisolone',
            name='date_ended',
        ),
        migrations.RemoveField(
            model_name='methylprednisolone',
            name='date_started',
        ),
        migrations.RemoveField(
            model_name='naproxen',
            name='date_ended',
        ),
        migrations.RemoveField(
            model_name='naproxen',
            name='date_started',
        ),
        migrations.RemoveField(
            model_name='othertreat',
            name='date_ended',
        ),
        migrations.RemoveField(
            model_name='othertreat',
            name='date_started',
        ),
        migrations.RemoveField(
            model_name='prednisone',
            name='date_ended',
        ),
        migrations.RemoveField(
            model_name='prednisone',
            name='date_started',
        ),
        migrations.RemoveField(
            model_name='tinctureoftime',
            name='date_ended',
        ),
        migrations.RemoveField(
            model_name='tinctureoftime',
            name='date_started',
        ),
        migrations.AddField(
            model_name='celecoxib',
            name='duration',
            field=models.IntegerField(blank=True, default=7, null=True, validators=[django.core.validators.MaxValueValidator(14), django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AddField(
            model_name='colchicine',
            name='dose2',
            field=models.IntegerField(blank=True, choices=[(Decimal('0.6'), '0.6 mg'), (Decimal('1.2'), '1.2 mg')], default=Decimal('0.6'), null=True),
        ),
        migrations.AddField(
            model_name='colchicine',
            name='dose3',
            field=models.IntegerField(blank=True, choices=[(Decimal('0.6'), '0.6 mg'), (Decimal('1.2'), '1.2 mg')], default=Decimal('0.6'), null=True),
        ),
        migrations.AddField(
            model_name='colchicine',
            name='duration',
            field=models.IntegerField(blank=True, default=7, null=True, validators=[django.core.validators.MaxValueValidator(14), django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AddField(
            model_name='colchicine',
            name='freq2',
            field=models.CharField(blank=True, choices=[('qday', 'Once daily'), ('bid', 'Twice daily'), ('tid', 'Three times daily'), ('q2weeks', 'Every 2 weeks'), ('once', 'Once')], default='once', max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='colchicine',
            name='freq3',
            field=models.CharField(blank=True, choices=[('qday', 'Once daily'), ('bid', 'Twice daily'), ('tid', 'Three times daily'), ('q2weeks', 'Every 2 weeks'), ('once', 'Once')], default='bid', max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='ibuprofen',
            name='duration',
            field=models.IntegerField(blank=True, default=7, null=True, validators=[django.core.validators.MaxValueValidator(14), django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AddField(
            model_name='meloxicam',
            name='duration',
            field=models.IntegerField(blank=True, default=7, null=True, validators=[django.core.validators.MaxValueValidator(14), django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AddField(
            model_name='methylprednisolone',
            name='duration',
            field=models.IntegerField(blank=True, default=7, null=True, validators=[django.core.validators.MaxValueValidator(14), django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AddField(
            model_name='naproxen',
            name='duration',
            field=models.IntegerField(blank=True, default=7, null=True, validators=[django.core.validators.MaxValueValidator(14), django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AddField(
            model_name='othertreat',
            name='duration',
            field=models.IntegerField(blank=True, default=7, null=True, validators=[django.core.validators.MaxValueValidator(14), django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AddField(
            model_name='prednisone',
            name='dose2',
            field=models.IntegerField(blank=True, choices=[(5, '5 mg'), (10, '10 mg'), (15, '15 mg'), (20, '20 mg'), (30, '30 mg'), (40, '40 mg'), (60, '60 mg')], default=20, null=True),
        ),
        migrations.AddField(
            model_name='prednisone',
            name='duration',
            field=models.IntegerField(blank=True, default=4, null=True, validators=[django.core.validators.MaxValueValidator(14), django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AddField(
            model_name='prednisone',
            name='duration2',
            field=models.IntegerField(blank=True, default=4, null=True, validators=[django.core.validators.MaxValueValidator(14), django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AddField(
            model_name='prednisone',
            name='freq2',
            field=models.CharField(blank=True, choices=[('qday', 'Once daily'), ('bid', 'Twice daily'), ('tid', 'Three times daily'), ('q2weeks', 'Every 2 weeks'), ('once', 'Once')], default='qday', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='allopurinol',
            name='date_started',
            field=models.DateField(blank=True, default=datetime.datetime.now, null=True),
        ),
        migrations.AlterField(
            model_name='allopurinol',
            name='generic_name',
            field=models.CharField(choices=[('allopurinol', 'Allopurinol'), ('febuxostat', 'Febuxostat'), ('indomethacin', 'Indomethacin'), ('prednisone', 'Prednisone'), ('colchicine', 'Colchicine'), ('probenecid', 'Probenecid'), ('pegloticase', 'Pegloticase'), ('ibuprofen', 'Ibuprofen'), ('naproxen', 'Naproxen'), ('meloxicam', 'Meloxicam'), ('celecoxib', 'Celecoxib'), ('methylprednisolone', 'Methylprednisolone'), ('tinctureoftime', 'Tinctureoftime'), ('other', 'Other')], default='allopurinol', max_length=60),
        ),
        migrations.AlterField(
            model_name='allopurinol',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='celecoxib',
            name='generic_name',
            field=models.CharField(choices=[('allopurinol', 'Allopurinol'), ('febuxostat', 'Febuxostat'), ('indomethacin', 'Indomethacin'), ('prednisone', 'Prednisone'), ('colchicine', 'Colchicine'), ('probenecid', 'Probenecid'), ('pegloticase', 'Pegloticase'), ('ibuprofen', 'Ibuprofen'), ('naproxen', 'Naproxen'), ('meloxicam', 'Meloxicam'), ('celecoxib', 'Celecoxib'), ('methylprednisolone', 'Methylprednisolone'), ('tinctureoftime', 'Tinctureoftime'), ('other', 'Other')], default='celecoxib', max_length=60),
        ),
        migrations.AlterField(
            model_name='celecoxib',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='colchicine',
            name='dose',
            field=models.IntegerField(blank=True, choices=[(Decimal('0.6'), '0.6 mg'), (Decimal('1.2'), '1.2 mg')], default=Decimal('1.2'), null=True),
        ),
        migrations.AlterField(
            model_name='colchicine',
            name='freq',
            field=models.CharField(blank=True, choices=[('qday', 'Once daily'), ('bid', 'Twice daily'), ('tid', 'Three times daily'), ('q2weeks', 'Every 2 weeks'), ('once', 'Once')], default='once', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='colchicine',
            name='generic_name',
            field=models.CharField(choices=[('allopurinol', 'Allopurinol'), ('febuxostat', 'Febuxostat'), ('indomethacin', 'Indomethacin'), ('prednisone', 'Prednisone'), ('colchicine', 'Colchicine'), ('probenecid', 'Probenecid'), ('pegloticase', 'Pegloticase'), ('ibuprofen', 'Ibuprofen'), ('naproxen', 'Naproxen'), ('meloxicam', 'Meloxicam'), ('celecoxib', 'Celecoxib'), ('methylprednisolone', 'Methylprednisolone'), ('tinctureoftime', 'Tinctureoftime'), ('other', 'Other')], default='colchicine', max_length=60),
        ),
        migrations.AlterField(
            model_name='colchicine',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='febuxostat',
            name='date_started',
            field=models.DateField(blank=True, default=datetime.datetime.now, null=True),
        ),
        migrations.AlterField(
            model_name='febuxostat',
            name='generic_name',
            field=models.CharField(choices=[('allopurinol', 'Allopurinol'), ('febuxostat', 'Febuxostat'), ('indomethacin', 'Indomethacin'), ('prednisone', 'Prednisone'), ('colchicine', 'Colchicine'), ('probenecid', 'Probenecid'), ('pegloticase', 'Pegloticase'), ('ibuprofen', 'Ibuprofen'), ('naproxen', 'Naproxen'), ('meloxicam', 'Meloxicam'), ('celecoxib', 'Celecoxib'), ('methylprednisolone', 'Methylprednisolone'), ('tinctureoftime', 'Tinctureoftime'), ('other', 'Other')], default='febuxostat', max_length=60),
        ),
        migrations.AlterField(
            model_name='febuxostat',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='ibuprofen',
            name='freq',
            field=models.CharField(blank=True, choices=[('qday', 'Once daily'), ('bid', 'Twice daily'), ('tid', 'Three times daily'), ('q2weeks', 'Every 2 weeks'), ('once', 'Once')], default='qday', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='ibuprofen',
            name='generic_name',
            field=models.CharField(choices=[('allopurinol', 'Allopurinol'), ('febuxostat', 'Febuxostat'), ('indomethacin', 'Indomethacin'), ('prednisone', 'Prednisone'), ('colchicine', 'Colchicine'), ('probenecid', 'Probenecid'), ('pegloticase', 'Pegloticase'), ('ibuprofen', 'Ibuprofen'), ('naproxen', 'Naproxen'), ('meloxicam', 'Meloxicam'), ('celecoxib', 'Celecoxib'), ('methylprednisolone', 'Methylprednisolone'), ('tinctureoftime', 'Tinctureoftime'), ('other', 'Other')], default='ibuprofen', max_length=60),
        ),
        migrations.AlterField(
            model_name='ibuprofen',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='meloxicam',
            name='generic_name',
            field=models.CharField(choices=[('allopurinol', 'Allopurinol'), ('febuxostat', 'Febuxostat'), ('indomethacin', 'Indomethacin'), ('prednisone', 'Prednisone'), ('colchicine', 'Colchicine'), ('probenecid', 'Probenecid'), ('pegloticase', 'Pegloticase'), ('ibuprofen', 'Ibuprofen'), ('naproxen', 'Naproxen'), ('meloxicam', 'Meloxicam'), ('celecoxib', 'Celecoxib'), ('methylprednisolone', 'Methylprednisolone'), ('tinctureoftime', 'Tinctureoftime'), ('other', 'Other')], default='meloxicam', max_length=60),
        ),
        migrations.AlterField(
            model_name='meloxicam',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='methylprednisolone',
            name='generic_name',
            field=models.CharField(choices=[('allopurinol', 'Allopurinol'), ('febuxostat', 'Febuxostat'), ('indomethacin', 'Indomethacin'), ('prednisone', 'Prednisone'), ('colchicine', 'Colchicine'), ('probenecid', 'Probenecid'), ('pegloticase', 'Pegloticase'), ('ibuprofen', 'Ibuprofen'), ('naproxen', 'Naproxen'), ('meloxicam', 'Meloxicam'), ('celecoxib', 'Celecoxib'), ('methylprednisolone', 'Methylprednisolone'), ('tinctureoftime', 'Tinctureoftime'), ('other', 'Other')], default='methylprednisolone', max_length=60),
        ),
        migrations.AlterField(
            model_name='methylprednisolone',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='naproxen',
            name='freq',
            field=models.CharField(blank=True, choices=[('qday', 'Once daily'), ('bid', 'Twice daily'), ('tid', 'Three times daily'), ('q2weeks', 'Every 2 weeks'), ('once', 'Once')], default='qday', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='naproxen',
            name='generic_name',
            field=models.CharField(choices=[('allopurinol', 'Allopurinol'), ('febuxostat', 'Febuxostat'), ('indomethacin', 'Indomethacin'), ('prednisone', 'Prednisone'), ('colchicine', 'Colchicine'), ('probenecid', 'Probenecid'), ('pegloticase', 'Pegloticase'), ('ibuprofen', 'Ibuprofen'), ('naproxen', 'Naproxen'), ('meloxicam', 'Meloxicam'), ('celecoxib', 'Celecoxib'), ('methylprednisolone', 'Methylprednisolone'), ('tinctureoftime', 'Tinctureoftime'), ('other', 'Other')], default='naproxen', max_length=60),
        ),
        migrations.AlterField(
            model_name='naproxen',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='othertreat',
            name='generic_name',
            field=models.CharField(choices=[('allopurinol', 'Allopurinol'), ('febuxostat', 'Febuxostat'), ('indomethacin', 'Indomethacin'), ('prednisone', 'Prednisone'), ('colchicine', 'Colchicine'), ('probenecid', 'Probenecid'), ('pegloticase', 'Pegloticase'), ('ibuprofen', 'Ibuprofen'), ('naproxen', 'Naproxen'), ('meloxicam', 'Meloxicam'), ('celecoxib', 'Celecoxib'), ('methylprednisolone', 'Methylprednisolone'), ('tinctureoftime', 'Tinctureoftime'), ('other', 'Other')], default='other', max_length=60),
        ),
        migrations.AlterField(
            model_name='othertreat',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='prednisone',
            name='dose',
            field=models.IntegerField(blank=True, choices=[(5, '5 mg'), (10, '10 mg'), (15, '15 mg'), (20, '20 mg'), (30, '30 mg'), (40, '40 mg'), (60, '60 mg')], default=40, null=True),
        ),
        migrations.AlterField(
            model_name='prednisone',
            name='freq',
            field=models.CharField(blank=True, choices=[('qday', 'Once daily'), ('bid', 'Twice daily'), ('tid', 'Three times daily'), ('q2weeks', 'Every 2 weeks'), ('once', 'Once')], default='qday', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='prednisone',
            name='generic_name',
            field=models.CharField(choices=[('allopurinol', 'Allopurinol'), ('febuxostat', 'Febuxostat'), ('indomethacin', 'Indomethacin'), ('prednisone', 'Prednisone'), ('colchicine', 'Colchicine'), ('probenecid', 'Probenecid'), ('pegloticase', 'Pegloticase'), ('ibuprofen', 'Ibuprofen'), ('naproxen', 'Naproxen'), ('meloxicam', 'Meloxicam'), ('celecoxib', 'Celecoxib'), ('methylprednisolone', 'Methylprednisolone'), ('tinctureoftime', 'Tinctureoftime'), ('other', 'Other')], default='prednisone', max_length=60),
        ),
        migrations.AlterField(
            model_name='prednisone',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='probenecid',
            name='date_started',
            field=models.DateField(blank=True, default=datetime.datetime.now, null=True),
        ),
        migrations.AlterField(
            model_name='probenecid',
            name='generic_name',
            field=models.CharField(choices=[('allopurinol', 'Allopurinol'), ('febuxostat', 'Febuxostat'), ('indomethacin', 'Indomethacin'), ('prednisone', 'Prednisone'), ('colchicine', 'Colchicine'), ('probenecid', 'Probenecid'), ('pegloticase', 'Pegloticase'), ('ibuprofen', 'Ibuprofen'), ('naproxen', 'Naproxen'), ('meloxicam', 'Meloxicam'), ('celecoxib', 'Celecoxib'), ('methylprednisolone', 'Methylprednisolone'), ('tinctureoftime', 'Tinctureoftime'), ('other', 'Other')], default='probenecid', max_length=60),
        ),
        migrations.AlterField(
            model_name='probenecid',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='tinctureoftime',
            name='generic_name',
            field=models.CharField(choices=[('allopurinol', 'Allopurinol'), ('febuxostat', 'Febuxostat'), ('indomethacin', 'Indomethacin'), ('prednisone', 'Prednisone'), ('colchicine', 'Colchicine'), ('probenecid', 'Probenecid'), ('pegloticase', 'Pegloticase'), ('ibuprofen', 'Ibuprofen'), ('naproxen', 'Naproxen'), ('meloxicam', 'Meloxicam'), ('celecoxib', 'Celecoxib'), ('methylprednisolone', 'Methylprednisolone'), ('tinctureoftime', 'Tinctureoftime'), ('other', 'Other')], default='tinctureoftime', max_length=60),
        ),
        migrations.AlterField(
            model_name='tinctureoftime',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Indomethacin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('prn', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=True, help_text='Do you take this medication only as needed (PRN)?', null=True)),
                ('as_prophylaxis', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Is this for flare prophylaxis while initiating ULT?', null=True, verbose_name='Flare prophylaxis?')),
                ('duration', models.IntegerField(blank=True, default=7, null=True, validators=[django.core.validators.MaxValueValidator(14), django.core.validators.MinValueValidator(1)])),
                ('generic_name', models.CharField(choices=[('allopurinol', 'Allopurinol'), ('febuxostat', 'Febuxostat'), ('indomethacin', 'Indomethacin'), ('prednisone', 'Prednisone'), ('colchicine', 'Colchicine'), ('probenecid', 'Probenecid'), ('pegloticase', 'Pegloticase'), ('ibuprofen', 'Ibuprofen'), ('naproxen', 'Naproxen'), ('meloxicam', 'Meloxicam'), ('celecoxib', 'Celecoxib'), ('methylprednisolone', 'Methylprednisolone'), ('tinctureoftime', 'Tinctureoftime'), ('other', 'Other')], default='indomethacin', max_length=60)),
                ('dose', models.IntegerField(blank=True, choices=[(25, '25 mg'), (50, '50 mg')], null=True)),
                ('freq', models.CharField(blank=True, choices=[('qday', 'Once daily'), ('bid', 'Twice daily'), ('tid', 'Three times daily'), ('q2weeks', 'Every 2 weeks'), ('once', 'Once')], default='qday', max_length=50)),
                ('side_effects', models.CharField(blank=True, choices=[('Rash', 'Rash'), ('Kidney failure', 'Kidney failure'), ('Stomach ulcer', 'Stomach ulcer'), ('GI upset', 'GI upset'), ('Medication interaction', 'Medication interaction'), ('None', 'None')], help_text='Have you had any side effects?', max_length=100)),
                ('drug_class', models.CharField(choices=[('urate-lowering therapy', 'Urate-lowering therapy'), ('systemic steroid', 'Systemic steroid'), ('anti-inflammatory', 'Anti-inflammatory'), ('nonsteroidal anti-inflammatory drug', 'Nonsteroidal anti-inflammatory drug'), ('urate extreagogue', 'Urate excretagogue'), ('local steroid', 'Local steroid'), ('recombinant uricase', 'Recombinant uricase'), ('other', 'Other')], default='nonsteroidal anti-inflammatory drug', max_length=50)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
